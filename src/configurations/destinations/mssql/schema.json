{
  "configSchema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "required": ["host", "database", "user", "password", "port", "sslMode"],
    "type": "object",
    "properties": {
      "host": {
        "type": "string",
        "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|(?!.*\\.ngrok\\.io)^(.{1,100})$"
      },
      "database": {
        "type": "string",
        "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{1,100})$"
      },
      "user": {
        "type": "string",
        "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{1,100})$"
      },
      "password": {
        "type": "string",
        "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|.*"
      },
      "port": {
        "type": "string",
        "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{1,100})$"
      },
      "namespace": {
        "type": "string",
        "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^((?!pg_|PG_|pG_|Pg_).{0,64})$"
      },
      "sslMode": {
        "type": "string",
        "enum": ["disable", "true", "false"],
        "default": "disable"
      },
      "syncFrequency": {
        "type": "string",
        "enum": ["30", "60", "180", "360", "720", "1440"],
        "default": "180"
      },
      "syncStartAt": {
        "type": "string"
      },
      "excludeWindow": {
        "type": "object",
        "properties": {
          "excludeWindowStartTime": {
            "type": "string"
          },
          "excludeWindowEndTime": {
            "type": "string"
          }
        },
        "required": ["excludeWindowStartTime", "excludeWindowEndTime"]
      },
      "useRudderStorage": {
        "type": "boolean",
        "default": false
      },
      "oneTrustCookieCategories": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "oneTrustCookieCategory": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            }
          }
        }
      }
    },
    "allOf": [
      {
        "if": {
          "properties": {
            "useRudderStorage": {
              "const": false
            }
          },
          "required": ["useRudderStorage"]
        },
        "then": {
          "properties": {
            "bucketProvider": {
              "type": "string",
              "enum": ["S3", "GCS", "AZURE_BLOB", "MINIO"],
              "default": "MINIO"
            }
          },
          "required": ["bucketProvider"]
        }
      },
      {
        "if": {
          "properties": {
            "bucketProvider": {
              "const": "S3"
            },
            "useRudderStorage": {
              "const": false
            }
          },
          "required": ["bucketProvider", "useRudderStorage"]
        },
        "then": {
          "properties": {
            "bucketName": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^((?!^xn--)(?!.*\\.\\..*)(?!^(\\d+(\\.|$)){4}$)[a-z0-9][a-z0-9-.]{1,61}[a-z0-9])$"
            },
            "roleBasedAuth": {
              "type": "boolean",
              "default": true
            }
          },
          "required": ["bucketName"],
          "anyOf": [
            {
              "properties": {
                "accessKeyID": {
                  "type": "string",
                  "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
                },
                "accessKey": {
                  "type": "string",
                  "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
                },
                "roleBasedAuth": {
                  "const": false
                }
              },
              "required": ["accessKeyID", "accessKey"]
            },
            {
              "properties": {
                "iamRoleARN": {
                  "type": "string",
                  "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
                },
                "roleBasedAuth": {
                  "const": true
                }
              },
              "required": ["iamRoleARN", "roleBasedAuth"]
            }
          ]
        }
      },
      {
        "if": {
          "properties": {
            "bucketProvider": {
              "const": "GCS"
            },
            "useRudderStorage": {
              "const": false
            }
          },
          "required": ["bucketProvider", "useRudderStorage"]
        },
        "then": {
          "properties": {
            "bucketName": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^((?!goog)(?!.*google.*)(?!^(\\d+(\\.|$)){4}$)(?!.*\\.\\..*)[a-z0-9][a-z0-9-._]{1,61}[a-z0-9])$"
            },
            "credentials": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|.*"
            }
          },
          "required": ["bucketName", "credentials"]
        }
      },
      {
        "if": {
          "properties": {
            "bucketProvider": {
              "const": "AZURE_BLOB"
            },
            "useRudderStorage": {
              "const": false
            }
          },
          "required": ["bucketProvider", "useRudderStorage"]
        },
        "then": {
          "properties": {
            "containerName": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(?=.{3,63}$)[a-z0-9]+(-[a-z0-9]+)*$"
            },
            "accountName": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{1,100})$"
            },
            "useSASTokens": {
              "type": "boolean",
              "default": false
            }
          },
          "required": ["containerName", "accountName"],
          "anyOf": [
            {
              "properties": {
                "accountKey": {
                  "type": "string",
                  "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{1,100})$"
                },
                "useSASTokens": {
                  "const": false
                }
              },
              "required": ["accountKey"]
            },
            {
              "properties": {
                "sasToken": {
                  "type": "string",
                  "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.+)$"
                },
                "useSASTokens": {
                  "const": true
                }
              },
              "required": ["sasToken", "useSASTokens"]
            }
          ]
        }
      },
      {
        "if": {
          "properties": {
            "bucketProvider": {
              "const": "MINIO"
            },
            "useRudderStorage": {
              "const": false
            }
          },
          "required": ["bucketProvider", "useRudderStorage"]
        },
        "then": {
          "properties": {
            "bucketName": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^((?!^(\\d+(\\.|$)){4}$)[a-z0-9][a-z0-9-.]{1,61}[a-z0-9])$"
            },
            "endPoint": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|(?!.*\\.ngrok\\.io)^(.{0,100})$"
            },
            "accessKeyID": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{1,100})$"
            },
            "secretAccessKey": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{1,100})$"
            },
            "useSSL": {
              "type": "boolean",
              "default": true
            }
          },
          "required": ["bucketName", "endPoint", "accessKeyID", "secretAccessKey"]
        }
      }
    ]
  }
}
