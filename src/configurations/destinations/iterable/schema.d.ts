/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type ITERABLE = {
  [k: string]: unknown;
} & {
  apiKey: string;
  registerDeviceOrBrowserApiKey?: string;
  useNativeSDK?: {
    web?: boolean;
    [k: string]: unknown;
  };
  getInAppEventMapping?: {
    web?: {
      eventName?: string;
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  purchaseEventMapping?: {
    web?: {
      eventName?: string;
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  initialisationIdentifier?: {
    web?: "email" | "userId";
    [k: string]: unknown;
  };
  sendTrackForInapp?: {
    web?: boolean;
    [k: string]: unknown;
  };
  animationDuration?: {
    web?: string;
    [k: string]: unknown;
  };
  bottomOffset?: {
    web?: string;
    [k: string]: unknown;
  };
  rightOffset?: {
    web?: string;
    [k: string]: unknown;
  };
  topOffset?: {
    web?: string;
    [k: string]: unknown;
  };
  displayInterval?: {
    web?: string;
    [k: string]: unknown;
  };
  handleLinks?: {
    web?: "open-all-new-tab" | "open-all-same-tab" | "external-new-tab";
    [k: string]: unknown;
  };
  onOpenScreenReaderMessage?: {
    web?: string;
    [k: string]: unknown;
  };
  onOpenNodeToTakeFocus?: {
    web?: string;
    [k: string]: unknown;
  };
  closeButtonColor?: {
    web?: string;
    [k: string]: unknown;
  };
  closeButtonSize?: {
    web?: string;
    [k: string]: unknown;
  };
  closeButtonPosition?: {
    web?: string;
    [k: string]: unknown;
  };
  closeButtonColorTopOffset?: {
    web?: string;
    [k: string]: unknown;
  };
  closeButtonColorSideOffset?: {
    web?: string;
    [k: string]: unknown;
  };
  iconPath?: {
    web?: string;
    [k: string]: unknown;
  };
  isRequiredToDismissMessage?: {
    web?: boolean;
    [k: string]: unknown;
  };
  mapToSingleEvent?: boolean;
  trackAllPages?: boolean;
  trackCategorisedPages?: boolean;
  trackNamedPages?: boolean;
  preferUserId?: boolean;
  mergeNestedObjects?: boolean;
  oneTrustCookieCategories?: {
    android?: {
      oneTrustCookieCategory?: string;
      [k: string]: unknown;
    }[];
    ios?: {
      oneTrustCookieCategory?: string;
      [k: string]: unknown;
    }[];
    web?: {
      oneTrustCookieCategory?: string;
      [k: string]: unknown;
    }[];
    unity?: {
      oneTrustCookieCategory?: string;
      [k: string]: unknown;
    }[];
    amp?: {
      oneTrustCookieCategory?: string;
      [k: string]: unknown;
    }[];
    cloud?: {
      oneTrustCookieCategory?: string;
      [k: string]: unknown;
    }[];
    warehouse?: {
      oneTrustCookieCategory?: string;
      [k: string]: unknown;
    }[];
    reactnative?: {
      oneTrustCookieCategory?: string;
      [k: string]: unknown;
    }[];
    flutter?: {
      oneTrustCookieCategory?: string;
      [k: string]: unknown;
    }[];
    cordova?: {
      oneTrustCookieCategory?: string;
      [k: string]: unknown;
    }[];
    shopify?: {
      oneTrustCookieCategory?: string;
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  connectionMode?: {
    web?: "cloud" | "device";
    android?: "cloud";
    ios?: "cloud";
    unity?: "cloud";
    amp?: "cloud";
    reactnative?: "cloud";
    flutter?: "cloud";
    cordova?: "cloud";
    shopify?: "cloud";
    cloud?: "cloud";
    warehouse?: "cloud";
    [k: string]: unknown;
  };
  consentManagement?: {
    cloud?: {
      [k: string]: unknown;
    }[];
    warehouse?: {
      [k: string]: unknown;
    }[];
    web?: {
      [k: string]: unknown;
    }[];
    amp?: {
      [k: string]: unknown;
    }[];
    android?: {
      [k: string]: unknown;
    }[];
    ios?: {
      [k: string]: unknown;
    }[];
    unity?: {
      [k: string]: unknown;
    }[];
    reactnative?: {
      [k: string]: unknown;
    }[];
    flutter?: {
      [k: string]: unknown;
    }[];
    cordova?: {
      [k: string]: unknown;
    }[];
    shopify?: {
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  ketchConsentPurposes?: {
    android?: {
      purpose?: string;
      [k: string]: unknown;
    }[];
    ios?: {
      purpose?: string;
      [k: string]: unknown;
    }[];
    web?: {
      purpose?: string;
      [k: string]: unknown;
    }[];
    unity?: {
      purpose?: string;
      [k: string]: unknown;
    }[];
    amp?: {
      purpose?: string;
      [k: string]: unknown;
    }[];
    cloud?: {
      purpose?: string;
      [k: string]: unknown;
    }[];
    warehouse?: {
      purpose?: string;
      [k: string]: unknown;
    }[];
    reactnative?: {
      purpose?: string;
      [k: string]: unknown;
    }[];
    flutter?: {
      purpose?: string;
      [k: string]: unknown;
    }[];
    cordova?: {
      purpose?: string;
      [k: string]: unknown;
    }[];
    shopify?: {
      purpose?: string;
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  [k: string]: unknown;
};
