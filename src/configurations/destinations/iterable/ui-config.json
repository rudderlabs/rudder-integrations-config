{
  "uiConfig": {
    "baseTemplate": [
      {
        "title": "Initial setup",
        "note": "Review how this destination is set up",
        "sections": [
          {
            "groups": [
              {
                "title": "Connection settings",
                "note": "Update your connection settings here",
                "icon": "settings",
                "fields": [
                  {
                    "type": "textInput",
                    "label": "Iterable Api Key",
                    "configKey": "apiKey",
                    "regex": "^(.{1,100})$",
                    "regexErrorMessage": "Invalid Iterable Api Key",
                    "placeholder": "e.g: 42f187310705012194bd0bd694905664ae"
                  },
                  {
                    "type": "textInput",
                    "label": "Package Name",
                    "configKey": "packageName",
                    "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{1,100})$",
                    "regexErrorMessage": "Invalid package name",
                    "note": "Iterable package name. Applicable to device mode only",
                    "placeholder": "e.g: my-website",
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "connectionModes.webDevice",
                          "value": true
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            "groups": [
              {
                "title": "Connection mode",
                "note": [
                  "Update how you want to route events from your source to destination. ",
                  {
                    "text": "Get help deciding",
                    "link": "https://www.rudderstack.com/docs/destinations/rudderstack-connection-modes/"
                  }
                ],
                "icon": "sliders",
                "fields": []
              }
            ]
          }
        ]
      },
      {
        "title": "Configuration settings",
        "note": "Manage the settings for your destination",
        "sections": [
          {
            "title": "Destination settings",
            "note": "Configure advanced destination-specific settings here",
            "icon": "settings",
            "groups": [
              {
                "title": "Page and Screen settings",
                "note": "Set how you want to send your page and screen calls to Iterable",
                "icon": "file",
                "fields": [
                  {
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "connectionModes.cloud",
                          "value": true
                        }
                      ]
                    },
                    "type": "checkbox",
                    "label": "Map All Pages to Single Event Name",
                    "configKey": "mapToSingleEvent",
                    "default": true
                  },
                  {
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "connectionModes.cloud",
                          "value": true
                        }
                      ]
                    },
                    "type": "checkbox",
                    "label": "Track All Pages",
                    "configKey": "trackAllPages",
                    "default": false
                  },
                  {
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "connectionModes.cloud",
                          "value": true
                        }
                      ]
                    },
                    "type": "checkbox",
                    "label": "Track Categorised Pages",
                    "configKey": "trackCategorisedPages",
                    "default": true
                  },
                  {
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "connectionModes.cloud",
                          "value": true
                        }
                      ]
                    },
                    "type": "checkbox",
                    "label": "Track Named Pages",
                    "configKey": "trackNamedPages",
                    "default": true
                  }
                ]
              },
              {
                "title": "Identify and Track settings",
                "icon": "magnifyingGlass",
                "note": "Configure your Identify and Track calls properties settings here",
                "fields": [
                  {
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "connectionModes.cloud",
                          "value": true
                        }
                      ]
                    },
                    "type": "textInput",
                    "label": "Iterable Mobile/Web Api Key",
                    "configKey": "registerDeviceOrBrowserApiKey",
                    "placeholder": "e.g: 42f187310705012194bd0bd694905664ae",
                    "regex": "^(.{0,100})$",
                    "regexErrorMessage": "Invalid Iterable Mobile/Web Api Key",
                    "note": "Iterable mobile/web key is required when you are sending token information in an identify call. RudderStack will use this key for registerDevice or registerBrowser api call"
                  },
                  {
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "connectionModes.cloud",
                          "value": true
                        }
                      ]
                    },
                    "type": "checkbox",
                    "label": "Create new user if userID exists",
                    "configKey": "preferUserId",
                    "default": true,
                    "note": [
                      "For more information about preferUserId refer ",
                      {
                        "text": "this",
                        "link": "https://api.iterable.com/api/docs#users_updateUser"
                      },
                      " link"
                    ]
                  },
                  {
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "connectionModes.cloud",
                          "value": true
                        }
                      ]
                    },
                    "type": "checkbox",
                    "label": "Merge top-level objects",
                    "configKey": "mergeNestedObjects",
                    "default": true,
                    "note": [
                      "For more information about mergeNestedObjects refer ",
                      {
                        "text": "this",
                        "link": "https://api.iterable.com/api/docs#users_updateUser"
                      },
                      " link"
                    ]
                  }
                ]
              }
            ]
          },
          {
            "title": "Other settings",
            "note": "Configure advanced RudderStack features here",
            "icon": "otherSettings",
            "groups": [
              {
                "title": "Client-side event filtering",
                "note": "Decide what events are allowed (allowlisting) and blocked (denylisting)",
                "preRequisites": {
                  "fields": [
                    {
                      "configKey": "connectionModes.webDevice",
                      "value": true
                    },
                    {
                      "configKey": "connectionModes.mobileDevice",
                      "value": true
                    }
                  ],
                  "condition": "or"
                },
                "fields": [
                  {
                    "type": "singleSelect",
                    "label": "Choose if you want to turn on events filtering:",
                    "configKey": "eventFilteringOption",
                    "note": "You must select either allowlist or denylist to enable events filtering",
                    "options": [
                      {
                        "label": "Disabled",
                        "value": "disable"
                      },
                      {
                        "label": "Filter via allowlist",
                        "value": "whitelistedEvents"
                      },
                      {
                        "label": "Filter via denylist",
                        "value": "blacklistedEvents"
                      }
                    ],
                    "default": "disable"
                  },
                  {
                    "type": "tagInput",
                    "label": "Allowlisted events",
                    "note": "Input separate events by pressing ‘Enter’.\nInput the events you want to allowlist.",
                    "configKey": "whitelistedEvents",
                    "tagKey": "eventName",
                    "placeholder": "e.g: Anonymous page visit",
                    "default": [
                      {
                        "eventName": ""
                      }
                    ],
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "eventFilteringOption",
                          "value": "whitelistedEvents"
                        }
                      ]
                    }
                  },
                  {
                    "type": "tagInput",
                    "label": "Denylisted events",
                    "note": "Input separate events by pressing ‘Enter’.\nInput the events you want to denylist. ",
                    "configKey": "blacklistedEvents",
                    "tagKey": "eventName",
                    "placeholder": "e.g: Anonymous page visit",
                    "default": [
                      {
                        "eventName": ""
                      }
                    ],
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "eventFilteringOption",
                          "value": "blacklistedEvents"
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "title": "OneTrust cookie consent settings",
                "note": [
                  "Enter your OneTrust category names if you have them configured. ",
                  {
                    "text": "Learn more ",
                    "link": "https://www.rudderstack.com/docs/sources/event-streams/sdks/rudderstack-javascript-sdk/onetrust-consent-manager/"
                  },
                  "about RudderStack’s OneTrust Consent Manager feature."
                ],
                "fields": [
                  {
                    "type": "tagInput",
                    "label": "Cookie category name",
                    "note": "Input your OneTrust category names by pressing ‘Enter’ after each entry",
                    "configKey": "oneTrustCookieCategories",
                    "tagKey": "oneTrustCookieCategory",
                    "placeholder": "e.g: Credit card visit",
                    "default": [
                      {
                        "oneTrustCookieCategory": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "sdkTemplate": {
      "title": "Web SDK settings",
      "note": "not visible in the ui",
      "fields": [
        {
          "type": "tagInput",
          "label": "Mapping to trigger the getInApp messages",
          "configKey": "getInAppEventMapping",
          "tagKey": "eventName",
          "default": [
            {
              "eventName": ""
            }
          ],
          "note": "Set the event names for which you want to trigger the web in-app push events"
        },
        {
          "type": "tagInput",
          "label": "Mapping to trigger the purchase events",
          "configKey": "purchaseEventMapping",
          "tagKey": "eventName",
          "default": [
            {
              "eventName": ""
            }
          ],
          "note": "Set the event names for which you want to trigger the purchase events"
        },
        {
          "type": "singleSelect",
          "label": "Identifier to identify a user over a session",
          "configKey": "initialisationIdentifier",
          "options": [
            {
              "label": "Email",
              "value": "email"
            },
            {
              "label": "UserID",
              "value": "userId"
            }
          ],
          "default": "email"
        },
        {
          "type": "checkbox",
          "label": "Trigger a track event for web in-app push",
          "configKey": "sendTrackForInapp",
          "default": false,
          "note": "Enable this if you want to track web in-app push notifications"
        },
        {
          "type": "textInput",
          "label": "Time (in ms) for messages to animate in and out",
          "configKey": "animationDuration",
          "placeholder": "e.g: 400"
        },
        {
          "type": "textInput",
          "label": "Space (px or %) between screen bottom & messages",
          "configKey": "bottomOffset",
          "placeholder": "e.g: 20%",
          "note": "Set the spacing between the screen bottom and push notification pop-up. This is not applicable for center, top, or full-screen messages"
        },
        {
          "type": "textInput",
          "label": "Space (px or %) between screen right & messages",
          "configKey": "rightOffset",
          "placeholder": "e.g: 20%",
          "note": "Set the spacing between the screen right and push notification pop-up. This is not applicable for center, top, or full-screen messages"
        },
        {
          "type": "textInput",
          "label": "Space (px or %) between screen top & messages",
          "configKey": "topOffset",
          "placeholder": "e.g: 20%",
          "note": "Set the spacing between the screen top and push notification pop-up. This is not applicable for center, top, or full-screen messages"
        },
        {
          "type": "textInput",
          "label": "Wait time for next message",
          "configKey": "displayInterval",
          "placeholder": "e.g: 25000",
          "note": "Time (in ms) to wait before showing next in-app message after closing the currently opened one"
        },
        {
          "type": "singleSelect",
          "label": "Control how to open links",
          "configKey": "handleLinks",
          "note": "Set how do you want the links present in the push notification to open",
          "options": [
            {
              "label": "Open all in new tabs",
              "value": "open-all-new-tab"
            },
            {
              "label": "Open all in same tabs",
              "value": "open-all-same-tab"
            },
            {
              "label": "Open in external new tab",
              "value": "external-new-tab"
            }
          ],
          "default": "open-all-new-tab"
        },
        {
          "type": "textInput",
          "label": "Screen Reader Text",
          "configKey": "onOpenScreenReaderMessage",
          "placeholder": "e.g: Reader message here",
          "note": "Text that screen reader should use to announce when opening in-app messages"
        },
        {
          "type": "textInput",
          "label": "Focus Element",
          "configKey": "onOpenNodeToTakeFocus",
          "placeholder": "e.g: input",
          "note": "Specify the DOM element to take keyboard focus when the in-app message opens"
        },
        {
          "type": "textInput",
          "label": "Color of Close button",
          "configKey": "closeButtonColor",
          "placeholder": "e.g: cyan"
        },
        {
          "type": "singleSelect",
          "label": "Position of Close button",
          "configKey": "closeButtonPosition",
          "note": "Cross button's position relative to the in-app message",
          "options": [
            {
              "label": "Top Right",
              "value": "top-right"
            },
            {
              "label": "Top Left",
              "value": "top-left"
            }
          ],
          "default": "top-right"
        },
        {
          "type": "textInput",
          "label": "Space between button & container top",
          "configKey": "closeButtonColorTopOffset",
          "placeholder": "e.g: 4%",
          "note": "Set the spacing between the cross button and the pop-up notification's top border"
        },
        {
          "type": "textInput",
          "label": "Space between button & container side",
          "configKey": "closeButtonColorSideOffset",
          "placeholder": "e.g: 4%",
          "note": "Set the spacing between the cross button and the pop-up notification's side borders"
        },
        {
          "type": "textInput",
          "label": "Custom pathname",
          "configKey": "iconPath",
          "placeholder": "e.g: path/to/icon",
          "note": "image or SVG to show instead of the default X"
        },
        {
          "type": "checkbox",
          "label": "Prevent user dismissing in-app message by clicking outside message",
          "configKey": "isRequiredToDismissMessage"
        }
      ]
    }
  }
}
