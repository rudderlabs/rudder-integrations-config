{
  "uiConfig": {
    "baseTemplate": [
      {
        "title": "Initial Setup",
        "note": "Review how this destination is set up",
        "sections": [
          {
            "title": "Connection settings",
            "note": "Configure connection settings here",
            "icon": "otherSettings",
            "groups": [
              {
                "title": "Connection Credentials",
                "note": "Update your connection credentials here",
                "fields": [
                  {
                    "type": "textInput",
                    "label": "Account",
                    "configKey": "account",
                    "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{1,100})$",
                    "regexErrorMessage": "Invalid Account",
                    "placeholder": "e.g: qya5X180.us-east-1",
                    "secret": false
                  },
                  {
                    "type": "textInput",
                    "label": "Database",
                    "configKey": "database",
                    "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{1,100})$",
                    "regexErrorMessage": "Invalid Database",
                    "placeholder": "e.g: RUDDER_EVENTS",
                    "secret": false
                  },
                  {
                    "type": "textInput",
                    "label": "Warehouse",
                    "configKey": "warehouse",
                    "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{1,100})$",
                    "regexErrorMessage": "Invalid Warehouse",
                    "placeholder": "e.g: rudder",
                    "secret": false
                  },
                  {
                    "type": "textInput",
                    "label": "User",
                    "configKey": "user",
                    "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{1,100})$",
                    "regexErrorMessage": "Invalid User",
                    "placeholder": "e.g: RUDDER_USER",
                    "secret": false
                  },
                  {
                    "type": "checkbox",
                    "label": "Use Role for Snowflake",
                    "configKey": "useRole",
                    "default": false
                  },
                  {
                    "type": "textInput",
                    "label": "Role",
                    "configKey": "role",
                    "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
                    "regexErrorMessage": "Invalid Role",
                    "placeholder": "e.g: RUDDER_ROLE",
                    "secret": false,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRole",
                          "value": true
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "Password",
                    "configKey": "password",
                    "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|.*",
                    "placeholder": "e.g: RUDDER_PASSWORD",
                    "secret": true
                  }
                ]
              },
              {
                "title": "Object Storage Configuration",
                "note": "Update where do you want the data staged to be stored",
                "fields": [
                  {
                    "type": "checkbox",
                    "label": "Toggle on to use RudderStack manage storage object for staging data",
                    "configKey": "useRudderStorage",
                    "note": "All the Data is Staged in Rudderstack Managed Object Storage",
                    "default": false
                  },
                  {
                    "type": "singleSelect",
                    "label": "Choose your Storage Provider",
                    "configKey": "cloudProvider",
                    "options": [
                      {
                        "label": "Amazon Web Services",
                        "value": "AWS"
                      },
                      {
                        "label": "Google Cloud Platform",
                        "value": "GCP"
                      },
                      {
                        "label": "Microsoft Azure",
                        "value": "AZURE"
                      }
                    ],
                    "default": "AWS",
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        }
                      ]
                    }
                  },
                  {
                    "type": "checkbox",
                    "label": "Use Prefix for RedShift",
                    "configKey": "usePrefix",
                    "default": false
                  },
                  {
                    "type": "textInput",
                    "label": "Prefix",
                    "configKey": "prefix",
                    "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
                    "regexErrorMessage": "Invalid Prefix",
                    "placeholder": "e.g: rudder",
                    "secret": false,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "usePrefix",
                          "value": true
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "Staging GCS Object Storage Bucket Name",
                    "note": "GCS Bucket to store data before loading into Snowflake",
                    "configKey": "bucketName",
                    "regex": "^((?!goog)(?!.*google.*)(?!^(\\d+(\\.|$)){4}$)(?!.*\\.\\..*)[a-z0-9][a-z0-9-._]{1,61}[a-z0-9])$",
                    "regexErrorMessage": "Invalid Staging GCS Object Storage Bucket Name",
                    "placeholder": "e.g: gcs-event-logs",
                    "secret": false,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "cloudProvider",
                          "value": "GCP"
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "S3 Bucket to store data before loading into Snowflake",
                    "note": "Please make sure the bucket exists in your S3",
                    "configKey": "bucketName",
                    "regex": "^((?!^xn--)(?!.*\\.\\..*)(?!^(\\d+(\\.|$)){4}$)[a-z0-9][a-z0-9-.]{1,61}[a-z0-9])$",
                    "regexErrorMessage": "Invalid Staging S3 Storage Bucket Name",
                    "placeholder": "e.g: s3-event-logs",
                    "secret": false,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "cloudProvider",
                          "value": "AWS"
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "Staging Azure Blob Storage Container Name",
                    "note": "Container to store data before loading into Snowflake",
                    "configKey": "containerName",
                    "regex": "^(?=.{3,63}$)[a-z0-9]+(-[a-z0-9]+)*$",
                    "regexErrorMessage": "Invalid Staging Azure Blob Object Storage Bucket Name",
                    "placeholder": "e.g: azure-blob-event-logs",
                    "secret": false,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "cloudProvider",
                          "value": "AZURE"
                        }
                      ]
                    }
                  },
                  {
                    "type": "checkbox",
                    "label": "Role Based Authentication",
                    "configKey": "roleBasedAuth",
                    "default": true,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "cloudProvider",
                          "value": "AWS"
                        }
                      ]
                    }
                  },
                  {
                    "type": "checkbox",
                    "label": "Use Storage Integration for AWS",
                    "configKey": "useStorageIntegration",
                    "default": false
                  },
                  {
                    "type": "textInput",
                    "label": "Storage Integration",
                    "configKey": "storageIntegration",
                    "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
                    "regexErrorMessage": "Invalid Storage Integration",
                    "placeholder": "e.g: aws_int",
                    "note": [
                      {
                        "text": "Instructions for setting up the integration",
                        "link": "https://docs.snowflake.com/en/user-guide/data-load-s3-config.html#option-1-configuring-a-snowflake-storage-integration"
                      }
                    ],
                    "secret": false,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "cloudProvider",
                          "value": "AWS"
                        },
                        {
                          "configKey": "useStorageIntegration",
                          "value": true
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "Storage Integration",
                    "configKey": "storageIntegration",
                    "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
                    "regexErrorMessage": "Invalid Storage Integration",
                    "placeholder": "e.g: gcs_int",
                    "note": [
                      {
                        "text": "Instructions for setting up the integration",
                        "link": "https://docs.snowflake.com/en/user-guide/data-load-gcs-config.html"
                      }
                    ],
                    "secret": false,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "cloudProvider",
                          "value": "GCP"
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "Storage Integration",
                    "configKey": "storageIntegration",
                    "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
                    "regexErrorMessage": "Invalid Storage Integration",
                    "note": [
                      {
                        "text": "Instructions for setting up the integration",
                        "link": "https://docs.snowflake.com/en/user-guide/data-load-azure-config.html#option-1-configuring-a-snowflake-storage-integration"
                      }
                    ],
                    "placeholder": "e.g: azure_int",
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "cloudProvider",
                          "value": "AZURE"
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "IAM Role ARN",
                    "configKey": "iamRoleARN",
                    "regex": "^(.{0,100})$",
                    "regexErrorMessage": "Invalid Role ARN",
                    "placeholder": "e.g: arn:aws:iam::123456789012:role/S3Access",
                    "secret": false,
                    "note": [
                      {
                        "text": "Instructions for creating IAM Role",
                        "link": "https://www.rudderstack.com/docs/destinations/aws-iam-role-for-rudderstack/"
                      }
                    ],
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "cloudProvider",
                          "value": "AWS"
                        },
                        {
                          "configKey": "roleBasedAuth",
                          "value": true
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "AWS Access Key ID",
                    "configKey": "accessKeyID",
                    "regex": "^(.{0,100})$",
                    "regexErrorMessage": "Invalid AWS Access Key ID",
                    "placeholder": "e.g: access-key-id",
                    "secret": true,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "cloudProvider",
                          "value": "AWS"
                        },
                        {
                          "configKey": "roleBasedAuth",
                          "value": false
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "AWS Secret Access Key",
                    "configKey": "accessKey",
                    "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{1,100})$",
                    "regexErrorMessage": "Invalid AWS Secret Access Key",
                    "placeholder": "e.g: access-secret-key-id",
                    "secret": true,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "cloudProvider",
                          "value": "AWS"
                        },
                        {
                          "configKey": "roleBasedAuth",
                          "value": false
                        }
                      ]
                    }
                  },
                  {
                    "type": "checkbox",
                    "label": "Enable Server Side Encryption For S3",
                    "configKey": "enableSSE",
                    "default": false,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "cloudProvider",
                          "value": "AWS"
                        },
                        {
                          "configKey": "roleBasedAuth",
                          "value": false
                        }
                      ]
                    }
                  },
                  {
                    "type": "checkbox",
                    "label": "Use shared access signature (SAS) Tokens",
                    "note": "Use this to Grant limited access to Azure Storage resources using shared access signatures (SAS)",
                    "configKey": "useSASTokens",
                    "default": false,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "cloudProvider",
                          "value": "AZURE"
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "Azure Blob Storage Account Name",
                    "configKey": "accountName",
                    "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{1,100})$",
                    "regexErrorMessage": "Invalid Azure Blob Storage Account Name",
                    "placeholder": "e.g: account-name",
                    "secret": false,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "cloudProvider",
                          "value": "AZURE"
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "Azure Blob Storage Account Key",
                    "configKey": "accountKey",
                    "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{1,100})$",
                    "regexErrorMessage": "Invalid Azure Blob Storage Account Key",
                    "placeholder": "e.g: account-key",
                    "secret": true,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "cloudProvider",
                          "value": "AZURE"
                        },
                        {
                          "configKey": "useSASTokens",
                          "value": false
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "Azure Blob Storage SAS Token",
                    "configKey": "sasToken",
                    "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.+)$",
                    "regexErrorMessage": "Invalid Azure Blob Storage SAS Token",
                    "placeholder": "e.g: sas-token",
                    "secret": true,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "cloudProvider",
                          "value": "AZURE"
                        },
                        {
                          "configKey": "useSASTokens",
                          "value": true
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "GCP Service Account credentials JSON",
                    "configKey": "credentials",
                    "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|.*",
                    "note": [
                      "Create a service account in your GCP Project for RudderStack with roles of 'storage.objectCreator'"
                    ],
                    "regexErrorMessage": "Invalid Credentials",
                    "placeholder": "",
                    "secret": true,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "cloudProvider",
                          "value": "GCP"
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            "groups": [
              {
                "title": "Connection mode",
                "note": [
                  "Update how you want to route events from your source to destination. ",
                  {
                    "text": "Get help deciding",
                    "link": "https://www.rudderstack.com/docs/destinations/rudderstack-connection-modes/"
                  }
                ],
                "icon": "sliders",
                "fields": []
              }
            ]
          },
          {
            "groups": [
              {
                "icon": "settings",
                "note": "",
                "title": "Namespace settings",
                "callout": {
                  "message": "Schema name for the warehouse where the tables are created",
                  "type": "info"
                },
                "fields": [
                  {
                    "type": "textInput",
                    "label": "Namespace",
                    "note": "Schema name for the warehouse where the tables are created,Default will be the source name",
                    "configKey": "namespace",
                    "regex": "^((?!pg_|PG_|pG_|Pg_).{0,64})$",
                    "regexErrorMessage": "Invalid Namespace",
                    "placeholder": "e.g: rudder-schema",
                    "secret": false
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "title": "Configuration settings",
        "note": "Manage the settings for your destination",
        "sections": [
          {
            "title": "Other settings",
            "note": "Configure advanced RudderStack features here",
            "icon": "otherSettings",
            "groups": [
              {
                "title": "Advanced Settings",
                "fields": [
                  {
                    "type": "singleSelect",
                    "label": "Sync Frequency",
                    "configKey": "syncFrequency",
                    "placeholder": "e.g: Credit card visit",
                    "options": [
                      {
                        "label": "Every 30 minutes",
                        "value": "30"
                      },
                      {
                        "label": "Every 1 hour",
                        "value": "60"
                      },
                      {
                        "label": "Every 3 hours",
                        "value": "180"
                      },
                      {
                        "label": "Every 6 hours",
                        "value": "360"
                      },
                      {
                        "label": "Every 12 hours",
                        "value": "720"
                      },
                      {
                        "label": "Every 24 hours",
                        "value": "1440"
                      }
                    ],
                    "default": "180"
                  },
                  {
                    "type": "textInput",
                    "label": "JSON columns (Optional)",
                    "note": "Specify required JSON properties in dot notation separated by commas",
                    "configKey": "jsonPaths",
                    "regex": "^(.*)$",
                    "regexErrorMessage": "Invalid Columns",
                    "placeholder": "e.g: testMap.nestedMap, testArray",
                    "secret": false
                  },
                  {
                    "type": "timePicker",
                    "label": "Sync Starting At (Optional)",
                    "note": "Please specify time in UTC",
                    "configKey": "syncStartAt",
                    "options": {
                      "omitSeconds": true,
                      "minuteStep": 15
                    }
                  },
                  {
                    "type": "timeRangePicker",
                    "label": "Exclude window (Optional)",
                    "note": "Please specify time in UTC",
                    "configKey": "excludeWindow",
                    "startTimeLabel": "Start time",
                    "startTimeKey": "excludeWindowStartTime",
                    "endTimeLabel": "End time",
                    "endTimeKey": "excludeWindowEndTime",
                    "default": {
                      "excludeWindowStartTime": "",
                      "excludeWindowEndTime": ""
                    },
                    "options": {
                      "omitSeconds": true,
                      "minuteStep": 1
                    }
                  }
                ]
              }
            ]
          },
          {
            "id": "consentSettings",
            "title": "Consent settings",
            "note": "Configure consent settings for each provider here",
            "icon": "settings",
            "groups": [
              {
                "title": "OneTrust consent settings",
                "note": [
                  "Enter your OneTrust consent category IDs if you have them configured. The support for category names is deprecated. We recommend using the category IDs instead of the names as IDs are unique and less likely to change over time, making them a more reliable choice.",
                  {
                    "text": "Learn more ",
                    "link": "https://www.rudderstack.com/docs/sources/event-streams/sdks/consent-manager/onetrust/"
                  },
                  "about RudderStack's OneTrust Consent Management feature."
                ],
                "fields": [
                  {
                    "type": "tagInput",
                    "label": "Consent categories",
                    "note": "Input your OneTrust category IDs by pressing 'Enter' after each entry.",
                    "configKey": "oneTrustCookieCategories",
                    "tagKey": "oneTrustCookieCategory",
                    "placeholder": "e.g: C0001",
                    "default": [
                      {
                        "oneTrustCookieCategory": ""
                      }
                    ]
                  }
                ],
                "preRequisites": {
                  "featureFlags": [
                    {
                      "configKey": "AMP_enable-gcm",
                      "value": false
                    },
                    {
                      "configKey": "AMP_enable-gcm"
                    }
                  ],
                  "featureFlagsCondition": "or"
                }
              },
              {
                "title": "Ketch consent purpose settings",
                "note": [
                  "Enter your Ketch purpose Id if you have them configured. ",
                  {
                    "text": "Learn more ",
                    "link": "https://www.rudderstack.com/docs/sources/event-streams/sdks/consent-manager/ketch/"
                  },
                  "about RudderStack and Ketch Consent Manager integration."
                ],
                "fields": [
                  {
                    "type": "tagInput",
                    "label": "Purpose ID",
                    "note": "Input your Ketch purpose Id by pressing 'Enter' after each entry",
                    "configKey": "ketchConsentPurposes",
                    "tagKey": "purpose",
                    "placeholder": "e.g: Marketing",
                    "default": [
                      {
                        "purpose": ""
                      }
                    ]
                  }
                ],
                "preRequisites": {
                  "featureFlags": [
                    {
                      "configKey": "AMP_enable-gcm",
                      "value": false
                    },
                    {
                      "configKey": "AMP_enable-gcm"
                    }
                  ],
                  "featureFlagsCondition": "or"
                }
              }
            ]
          }
        ]
      }
    ],
    "sdkTemplate": {
      "title": "SDK settings",
      "note": "not visible in the ui",
      "fields": []
    },
    "consentSettingsTemplate": {
      "title": "Consent settings",
      "note": "not visible in the ui",
      "fields": [
        {
          "type": "dynamicCustomForm",
          "configKey": "consentManagement",
          "default": [],
          "rowFields": [
            {
              "type": "singleSelect",
              "label": "Consent management provider",
              "configKey": "provider",
              "options": [
                {
                  "label": "Custom",
                  "value": "custom"
                },
                {
                  "label": "Ketch",
                  "value": "ketch"
                },
                {
                  "label": "OneTrust",
                  "value": "oneTrust"
                }
              ],
              "default": "oneTrust",
              "required": true
            },
            {
              "type": "singleSelect",
              "label": "the required consent logic",
              "configKey": "resolutionStrategy",
              "options": [
                {
                  "label": "AND",
                  "value": "and"
                },
                {
                  "label": "OR",
                  "value": "or"
                }
              ],
              "required": true,
              "variant": "badge",
              "preRequisites": {
                "fields": [
                  {
                    "configKey": "provider",
                    "value": "custom"
                  }
                ]
              }
            },
            {
              "type": "tagInput",
              "label": "Enter consent category ID’s",
              "note": "Input your consent category IDs by pressing ‘Enter’ after each entry. The support for category names is deprecated. We recommend using the category IDs instead of the names as IDs are unique and less likely to change over time, making them a more reliable choice.",
              "configKey": "consents",
              "tagKey": "consent",
              "placeholder": "e.g: Marketing",
              "default": [
                {
                  "consent": ""
                }
              ]
            }
          ],
          "preRequisites": {
            "featureFlags": [
              {
                "configKey": "AMP_enable-gcm",
                "value": true
              }
            ]
          }
        }
      ]
    }
  }
}
