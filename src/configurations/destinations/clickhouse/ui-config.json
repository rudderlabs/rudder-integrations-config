{
  "uiConfig": {
    "baseTemplate": [
      {
        "title": "Initial Setup",
        "note": "Review how this destination is set up",
        "sections": [
          {
            "title": "Connection settings",
            "note": "Configure connection settings here",
            "icon": "otherSettings",
            "groups": [
              {
                "title": "Connection Credentials",
                "note": "Update your connection credentials here",
                "fields": [
                  {
                    "type": "textInput",
                    "label": "Host",
                    "configKey": "host",
                    "regex": "(?!.*.ngrok.io)^(.{0,100})$",
                    "regexErrorMessage": "Invalid Host",
                    "placeholder": "e.g: clickhouse.mydomain.com",
                    "secret": false
                  },
                  {
                    "type": "textInput",
                    "label": "Database",
                    "configKey": "database",
                    "regex": "^(.{0,100})$",
                    "regexErrorMessage": "Invalid Database",
                    "placeholder": "e.g: rudderdb",
                    "secret": false
                  },
                  {
                    "type": "textInput",
                    "label": "Cluster",
                    "configKey": "cluster",
                    "regex": "^(.{0,100})$",
                    "regexErrorMessage": "Invalid Cluster",
                    "placeholder": "e.g: cluster_name",
                    "secret": false
                  },
                  {
                    "type": "textInput",
                    "label": "User",
                    "configKey": "user",
                    "regex": "^(.{0,100})$",
                    "regexErrorMessage": "Invalid User",
                    "placeholder": "e.g: rudder",
                    "secret": false
                  },
                  {
                    "type": "textInput",
                    "label": "Password",
                    "configKey": "password",
                    "regex": ".*",
                    "placeholder": "e.g: rudder-password",
                    "secret": true
                  },
                  {
                    "type": "textInput",
                    "label": "Port",
                    "configKey": "port",
                    "regex": "^(.{0,100})$",
                    "regexErrorMessage": "Invalid Port",
                    "placeholder": "9000",
                    "secret": false,
                    "note": [
                      {
                        "text": "The TCP port of your ClickHouse host. If you want the connection to be secure, use the secure TCP port 9440.",
                        "link": "https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#server_configuration_parameters-tcp_port"
                      }
                    ]
                  }
                ]
              },
              {
                "title": "Security Settings",
                "note": "Security requirements for your warehouse",
                "fields": [
                  {
                    "type": "checkbox",
                    "label": "Secure",
                    "configKey": "secure",
                    "default": false
                  },
                  {
                    "type": "checkbox",
                    "label": "Skip Verify",
                    "configKey": "skipVerify",
                    "note": "If you are using self signed certificates set this field to true",
                    "default": false,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "secure",
                          "value": true
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "CA certificate",
                    "configKey": "caCertificate",
                    "regex": ".*",
                    "secret": false,
                    "placeholder": "CA Certificate",
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "secure",
                          "value": true
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "title": "Object Storage Configuration",
                "note": "Update where do you want the data staged to be stored",
                "fields": [
                  {
                    "type": "checkbox",
                    "label": "Toggle on to use RudderStack manage storage object for staging data",
                    "configKey": "useRudderStorage",
                    "note": "All the Data is Staged in Rudderstack Managed Object Storage",
                    "default": false
                  },
                  {
                    "type": "singleSelect",
                    "label": "Choose your Storage Provider",
                    "configKey": "bucketProvider",
                    "options": [
                      {
                        "name": "S3",
                        "value": "S3"
                      },
                      {
                        "name": "GCS",
                        "value": "GCS"
                      },
                      {
                        "name": "AZURE_BLOB",
                        "value": "AZURE_BLOB"
                      },
                      {
                        "name": "MINIO",
                        "value": "MINIO"
                      }
                    ],
                    "default": "MINIO",
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "Staging GCS Object Storage Bucket Name",
                    "note": "GCS Bucket to store data before loading into Clickhouse",
                    "configKey": "bucketName",
                    "regex": "^((?!goog)(?!.*google.*)(?!^(\\d+(\\.|$)){4}$)(?!.*\\.\\..*)[a-z0-9][a-z0-9-._]{1,61}[a-z0-9])$",
                    "regexErrorMessage": "Invalid Staging GCS Object Storage Bucket Name",
                    "placeholder": "e.g: gcs-event-logs",
                    "secret": false,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "bucketProvider",
                          "value": "GCS"
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "S3 Bucket to store data before loading into Clickhouse",
                    "note": "Please make sure the bucket exists in your S3",
                    "configKey": "bucketName",
                    "regex": "^((?!^xn--)(?!.*\\.\\..*)(?!^(\\d+(\\.|$)){4}$)[a-z0-9][a-z0-9-.]{1,61}[a-z0-9])$",
                    "regexErrorMessage": "Invalid Staging S3 Storage Bucket Name",
                    "placeholder": "e.g: s3-event-logs",
                    "secret": false,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "bucketProvider",
                          "value": "S3"
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "Staging Azure Blob Storage Container Name",
                    "note": "Container to store data before loading into Clickhouse",
                    "configKey": "containerName",
                    "regex": "^(?=.{3,63}$)[a-z0-9]+(-[a-z0-9]+)*$",
                    "regexErrorMessage": "Invalid Staging Azure Blob Object Storage Bucket Name",
                    "placeholder": "e.g: azure-blob-event-logs",
                    "secret": false,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "bucketProvider",
                          "value": "AZURE_BLOB"
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "Staging MINIO Storage Bucket Name",
                    "note": "MINIO Bucket to store data before loading into Clickhouse",
                    "configKey": "bucketName",
                    "regex": "^((?!^(\\d+(\\.|$)){4}$)[a-z0-9][a-z0-9-.]{1,61}[a-z0-9])$",
                    "regexErrorMessage": "Invalid Staging MINIO Storage Bucket Name",
                    "placeholder": "e.g: minio-event-logs",
                    "secret": false,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "bucketProvider",
                          "value": "MINIO"
                        }
                      ]
                    }
                  },
                  {
                    "type": "checkbox",
                    "label": "Role Based Authentication",
                    "configKey": "roleBasedAuth",
                    "default": true,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "bucketProvider",
                          "value": "S3"
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "IAM Role ARN",
                    "configKey": "iamRoleARN",
                    "regex": "^(.{0,100})$",
                    "regexErrorMessage": "Invalid Role ARN",
                    "placeholder": "e.g: arn:aws:iam::123456789012:role/S3Access",
                    "secret": false,
                    "note": [
                      {
                        "test": "Instructions for creating IAM Role",
                        "link": "https://www.rudderstack.com/docs/destinations/aws-iam-role-for-rudderstack/"
                      }
                    ],
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "bucketProvider",
                          "value": "S3"
                        },
                        {
                          "configKey": "roleBasedAuth",
                          "value": true
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "AWS Access Key ID",
                    "configKey": "accessKeyID",
                    "regex": "^(.{0,100})$",
                    "regexErrorMessage": "Invalid AWS Access Key ID",
                    "placeholder": "e.g: access-key-id",
                    "secret": true,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "bucketProvider",
                          "value": "S3"
                        },
                        {
                          "configKey": "roleBasedAuth",
                          "value": false
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "AWS Secret Access Key",
                    "configKey": "accessKey",
                    "regex": "^(.{0,100})$",
                    "regexErrorMessage": "Invalid AWS Secret Access Key",
                    "placeholder": "e.g: access-secret-key-id",
                    "secret": true,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "bucketProvider",
                          "value": "S3"
                        },
                        {
                          "configKey": "roleBasedAuth",
                          "value": false
                        }
                      ]
                    }
                  },
                  {
                    "type": "checkbox",
                    "label": "Use shared access signature (SAS) Tokens",
                    "note": "Use this to Grant limited access to Azure Storage resources using shared access signatures (SAS)",
                    "configKey": "useSASTokens",
                    "default": false,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "bucketProvider",
                          "value": "AZURE_BLOB"
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "Azure Blob Storage Account Name",
                    "configKey": "accountName",
                    "regex": "^(.{0,100})$",
                    "regexErrorMessage": "Invalid Azure Blob Storage Account Name",
                    "placeholder": "e.g: account-name",
                    "secret": false,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "bucketProvider",
                          "value": "AZURE_BLOB"
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "Azure Blob Storage Account Key",
                    "configKey": "accountKey",
                    "regex": "^(.{0,100})$",
                    "regexErrorMessage": "Invalid Azure Blob Storage Account Key",
                    "placeholder": "e.g: account-key",
                    "secret": true,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "bucketProvider",
                          "value": "AZURE_BLOB"
                        },
                        {
                          "configKey": "useSASTokens",
                          "value": false
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "Azure Blob Storage SAS Token",
                    "configKey": "sasToken",
                    "regex": "^(.+)$",
                    "regexErrorMessage": "Invalid Azure Blob Storage SAS Token",
                    "placeholder": "e.g: sas-token",
                    "secret": true,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "bucketProvider",
                          "value": "AZURE_BLOB"
                        },
                        {
                          "configKey": "useSASTokens",
                          "value": true
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "Credentials",
                    "note": "GCP Service Account credentials JSON for RudderStack to use in loading data into your Google Cloud Storage",
                    "configKey": "credentials",
                    "regex": ".*",
                    "regexErrorMessage": "Invalid Credentials",
                    "placeholder": "",
                    "secret": true,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "bucketProvider",
                          "value": "GCS"
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "MinIO Endpoint",
                    "configKey": "endPoint",
                    "regex": "(?!.*\\.ngrok\\.io)^(.{0,100})$",
                    "regexErrorMessage": "Invalid MinIO Endpoint",
                    "placeholder": "e.g: play.min.io:9000",
                    "secret": false,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "bucketProvider",
                          "value": "MINIO"
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "MINIO Access Key ID",
                    "configKey": "accessKeyID",
                    "regex": "^(.{0,100})$",
                    "regexErrorMessage": "Invalid MinIO Access Key ID",
                    "placeholder": "e.g: access-key-id",
                    "secret": true,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "bucketProvider",
                          "value": "MINIO"
                        }
                      ]
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "MINIO Secret Access Key",
                    "configKey": "secretAccessKey",
                    "regex": "^(.{0,100})$",
                    "regexErrorMessage": "Invalid MinIO Secret Access Key",
                    "placeholder": "e.g: secret-access-key",
                    "secret": true,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "bucketProvider",
                          "value": "MINIO"
                        }
                      ]
                    }
                  },
                  {
                    "type": "checkbox",
                    "label": "Use SSL for connection",
                    "configKey": "useSSL",
                    "default": true,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "useRudderStorage",
                          "value": false
                        },
                        {
                          "configKey": "bucketProvider",
                          "value": "MINIO"
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            "groups": [
              {
                "title": "Connection mode",
                "note": [
                  "Update how you want to route events from your source to destination. ",
                  {
                    "text": "Get help deciding",
                    "link": "https://www.rudderstack.com/docs/destinations/rudderstack-connection-modes/"
                  }
                ],
                "icon": "sliders",
                "fields": []
              }
            ]
          },
          {
            "groups": [
              {
                "icon": "settings",
                "note": "",
                "title": "Namespace settings",
                "callout": {
                  "message": "Schema name for the warehouse where the tables are created",
                  "type": "info"
                },
                "fields": [
                  {
                    "type": "textInput",
                    "label": "Namespace",
                    "note": "Schema name for the warehouse where the tables are created,Default will be the source name",
                    "configKey": "namespace",
                    "regex": "^((?!pg_|PG_|pG_|Pg_).{0,64})$",
                    "regexErrorMessage": "Invalid Namespace",
                    "placeholder": "e.g: rudder-schema",
                    "secret": false
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "title": "Configuration settings",
        "note": "Manage the settings for your destination",
        "sections": [
          {
            "title": "Other settings",
            "note": "Configure advanced RudderStack features here",
            "icon": "otherSettings",
            "groups": [
              {
                "title": "Advanced Settings",
                "fields": [
                  {
                    "type": "singleSelect",
                    "label": "Sync Frequency",
                    "configKey": "syncFrequency",
                    "placeholder": "e.g: Credit card visit",
                    "options": [
                      {
                        "label": "Every 30 minutes",
                        "value": "30"
                      },
                      {
                        "label": "Every 1 hour",
                        "value": "60"
                      },
                      {
                        "label": "Every 3 hours",
                        "value": "180"
                      },
                      {
                        "label": "Every 6 hours",
                        "value": "360"
                      },
                      {
                        "label": "Every 12 hours",
                        "value": "720"
                      },
                      {
                        "label": "Every 24 hours",
                        "value": "1440"
                      }
                    ],
                    "default": "180"
                  },
                  {
                    "type": "timePicker",
                    "label": "Sync Starting At (Optional)",
                    "note": "Please specify time in UTC",
                    "configKey": "syncStartAt",
                    "options": {
                      "omitSeconds": true,
                      "minuteStep": 15
                    }
                  },
                  {
                    "type": "timeRangePicker",
                    "label": "Exclude window (Optional)",
                    "note": "Please specify time in UTC",
                    "configKey": "excludeWindow",
                    "startTimeLabel": "Start time",
                    "startTimeKey": "excludeWindowStartTime",
                    "endTimeLabel": "End time",
                    "endTimeKey": "excludeWindowEndTime",
                    "default": { "excludeWindowStartTime": "", "excludeWindowEndTime": "" },
                    "options": {
                      "omitSeconds": true,
                      "minuteStep": 1
                    }
                  }
                ]
              },
              {
                "title": "OneTrust cookie consent settings",
                "note": [
                  "Enter your OneTrust consent category IDs if you have them configured. The support for category names is deprecated. We recommend using the category IDs instead of the names as IDs are unique and less likely to change over time, making them a more reliable choice.",
                  {
                    "text": "Learn more ",
                    "link": "https://www.rudderstack.com/docs/sources/event-streams/sdks/consent-manager/onetrust/"
                  },
                  "about RudderStack's OneTrust Consent Management feature."
                ],
                "fields": [
                  {
                    "type": "tagInput",
                    "label": "Consent categories",
                    "note": "Input your OneTrust category names by pressing ‘Enter’ after each entry",
                    "configKey": "oneTrustCookieCategories",
                    "tagKey": "oneTrustCookieCategory",
                    "placeholder": "e.g: Credit card visit",
                    "default": [
                      {
                        "oneTrustCookieCategory": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "sdkTemplate": {
      "title": "SDK settings",
      "note": "not visible in the ui",
      "fields": []
    }
  }
}
