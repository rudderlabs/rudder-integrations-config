{
  "uiConfig": [
    {
      "title": "Connection Credentials",
      "fields": [
        {
          "type": "textInput",
          "label": "Host",
          "value": "host",
          "regex": "(?!.*\\.ngrok\\.io)^(.{1,100})$",
          "regexErrorMessage": "Invalid Host",
          "placeholder": "xxx.cloud.databricks.com",
          "required": true
        },
        {
          "type": "textInput",
          "label": "Port",
          "value": "port",
          "regex": "^(.{1,100})$",
          "regexErrorMessage": "Invalid Port",
          "placeholder": "443",
          "required": true
        },
        {
          "type": "textInput",
          "label": "HTTP Path",
          "value": "path",
          "regex": "^(.{1,100})$",
          "regexErrorMessage": "Invalid HTTP Path",
          "placeholder": "sql/protocolv1/o/<ordId>/<clusterId> or /sql/1.0/endpoints/<endpointId>",
          "required": true
        },
        {
          "type": "textInput",
          "label": "Personal Access Token",
          "value": "token",
          "regex": "^(.{1,100})$",
          "regexErrorMessage": "Invalid Access Token",
          "placeholder": "e.g: <personal-access-token>",
          "required": true,
          "secret": true
        },
        {
          "type": "checkbox",
          "label": "Enable delta tables creation in an external location",
          "value": "enableExternalLocation",
          "default": false
        },
        {
          "type": "textInput",
          "preRequisiteField": [
            {
              "name": "enableExternalLocation",
              "selectedValue": true
            }
          ],
          "label": "External delta table location",
          "value": "externalLocation",
          "regex": "^(.{1,100})$",
          "regexErrorMessage": "Invalid External Delta Table Location",
          "placeholder": "/path/to/delta/table",
          "required": true,
          "footerNote": "This can only be applied to the new delta tables created by RudderStack. For already existing tables, RudderStack do not recreate the tables again.",
          "footerURL": {
            "link": "https://www.rudderstack.com/docs/data-warehouse-integrations/delta-lake/#faqs",
            "text": "Please refer to the FAQs section, before you wanted to make any changes around managed and unmanaged tables provided by the Databricks."
          }
        },
        {
          "type": "textInput",
          "label": "Namespace",
          "labelNote": "Schema name for the warehouse where the tables are created",
          "value": "namespace",
          "regex": "^((?!pg_|PG_|pG_|Pg_).{0,64})$",
          "regexErrorMessage": "Invalid Namespace",
          "required": false,
          "placeholder": "e.g: iosSource",
          "footerNote": "Default will be the source name"
        },
        {
          "type": "singleSelect",
          "label": "Sync Frequency",
          "value": "syncFrequency",
          "options": [
            {
              "name": "Every 30 minutes",
              "value": "30"
            },
            {
              "name": "Every 1 hour",
              "value": "60"
            },
            {
              "name": "Every 3 hours",
              "value": "180"
            },
            {
              "name": "Every 6 hours",
              "value": "360"
            },
            {
              "name": "Every 12 hours",
              "value": "720"
            },
            {
              "name": "Every 24 hours",
              "value": "1440"
            }
          ],
          "defaultOption": {
            "name": "Every 30 minutes",
            "value": "30"
          },
          "required": false
        },
        {
          "type": "timePicker",
          "label": "Sync Starting At (Optional)",
          "value": "syncStartAt",
          "options": {
            "omitSeconds": true,
            "minuteStep": 15
          },
          "required": false,
          "footerNote": "Note: Please specify time in UTC"
        },
        {
          "type": "timeRangePicker",
          "label": "Exclude window (Optional)",
          "value": "excludeWindow",
          "startTime": {
            "label": "start time",
            "value": "excludeWindowStartTime"
          },
          "endTime": {
            "label": "end time",
            "value": "excludeWindowEndTime"
          },
          "options": {
            "omitSeconds": true,
            "minuteStep": 1
          },
          "required": false,
          "footerNote": "Note: Please specify time in UTC"
        }
      ]
    },
    {
      "title": "Object Storage Configuration",
      "fields": [
        {
          "type": "singleSelect",
          "label": "Choose your Storage Provider",
          "value": "bucketProvider",
          "options": [
            {
              "name": "S3",
              "value": "S3"
            },
            {
              "name": "GCS",
              "value": "GCS"
            },
            {
              "name": "AZURE_BLOB",
              "value": "AZURE_BLOB"
            }
          ],
          "defaultOption": {
            "name": "S3",
            "value": "S3"
          },
          "required": true
        },
        {
          "type": "textInput",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "S3"
            }
          ],
          "label": "Staging S3 Storage Bucket Name",
          "labelNote": "S3 Bucket to store data before loading into DeltaLake",
          "value": "bucketName",
          "regex": "^((?!^xn--)(?!.*\\.\\..*)(?!^(\\d+(\\.|$)){4}$)[a-z0-9][a-z0-9-.]{1,61}[a-z0-9])$",
          "regexErrorMessage": "Invalid Staging S3 Storage Bucket Name",
          "required": true,
          "placeholder": "e.g: s3-event-logs",
          "footerNote": "Please make sure the bucket exists in your S3"
        },
        {
          "type": "textInput",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "GCS"
            }
          ],
          "label": "Staging GCS Object Storage Bucket Name",
          "labelNote": "GCS Bucket to store data before loading into DeltaLake",
          "value": "bucketName",
          "regex": "^((?!goog)(?!.*google.*)(?!^(\\d+(\\.|$)){4}$)(?!.*\\.\\..*)[a-z0-9][a-z0-9-._]{1,61}[a-z0-9])$",
          "regexErrorMessage": "Invalid Staging GCS Object Storage Bucket Name",
          "required": true,
          "placeholder": "e.g: gcs-event-logs",
          "footerNote": "Please make sure the bucket exists in your GCS"
        },
        {
          "type": "textInput",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "AZURE_BLOB"
            }
          ],
          "label": "Staging Azure Blob Storage Container Name",
          "labelNote": "Container to store data before loading into DeltaLake",
          "value": "containerName",
          "regex": "^(?=.{3,63}$)[a-z0-9]+(-[a-z0-9]+)*$",
          "regexErrorMessage": "Invalid Staging Azure Blob Storage Container Name",
          "required": true,
          "placeholder": "e.g: azure-event-logs",
          "footerNote": "Please make sure the container exists in your Azure Blob Storage"
        },
        {
          "type": "textInput",
          "label": "Prefix",
          "value": "prefix",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid Prefix",
          "required": false,
          "placeholder": "e.g: rudder"
        },
        {
          "type": "checkbox",
          "label": "Use STS Tokens to copy staging files",
          "value": "useSTSTokens",
          "default": false,
          "footerNote": "Note: This feature is only supported with databricks S3A client.",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "S3"
            }
          ]
        },
        {
          "type": "checkbox",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "S3"
            },
            {
              "name": "useSTSTokens",
              "selectedValue": true
            }
          ],
          "label": "Role Based Authentication",
          "value": "roleBasedAuth",
          "default": false
        },
        {
          "type": "textInput",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "S3"
            },
            {
              "name": "useSTSTokens",
              "selectedValue": true
            },
            {
              "name": "roleBasedAuth",
              "selectedValue": true
            }
          ],
          "label": "IAM Role ARN",
          "value": "iamRoleARN",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid Role ARN",
          "required": true,
          "placeholder": "e.g: arn:aws:iam::123456789012:role/S3Access",
          "footerURL": {
            "link": "https://www.rudderstack.com/docs/destinations/aws-iam-role-for-rudderstack/",
            "text": "Instructions for creating IAM Role"
          }
        },
        {
          "type": "textInput",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "S3"
            },
            {
              "name": "useSTSTokens",
              "selectedValue": true
            },
            {
              "name": "roleBasedAuth",
              "selectedValue": false
            }
          ],
          "label": "AWS Access Key ID",
          "value": "accessKeyID",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid AWS Access Key ID",
          "required": true,
          "placeholder": "e.g: access-key-id",
          "secret": true
        },
        {
          "type": "textInput",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "S3"
            },
            {
              "name": "useSTSTokens",
              "selectedValue": true
            },
            {
              "name": "roleBasedAuth",
              "selectedValue": false
            }
          ],
          "label": "AWS Secret Access Key",
          "value": "accessKey",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid AWS Secret Access Key",
          "required": true,
          "placeholder": "e.g: secret-access-key",
          "secret": true
        },
        {
          "type": "checkbox",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "S3"
            }
          ],
          "label": "Enable Server Side Encryption For S3?",
          "value": "enableSSE",
          "default": false
        },
        {
          "type": "textInput",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "AZURE_BLOB"
            }
          ],
          "label": "Azure Blob Storage Account Name",
          "value": "accountName",
          "regex": "^(.{1,100})$",
          "regexErrorMessage": "Invalid Azure Blob Storage Account Name",
          "required": true,
          "secret": true,
          "placeholder": "e.g: account-name"
        },
        {
          "type": "textInput",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "AZURE_BLOB"
            },
            {
              "name": "useSASTokens",
              "selectedValue": false
            }
          ],
          "label": "Azure Blob Storage Account Key",
          "value": "accountKey",
          "regex": "^(.{1,100})$",
          "regexErrorMessage": "Invalid Azure Blob Storage Account Key",
          "required": true,
          "secret": true,
          "placeholder": "e.g: account-key"
        },
        {
          "type": "textInput",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "AZURE_BLOB"
            },
            {
              "name": "useSASTokens",
              "selectedValue": true
            }
          ],
          "label": "Azure Blob Storage SAS Token",
          "value": "sasToken",
          "regex": "^(.+)$",
          "regexErrorMessage": "Invalid Azure Blob Storage SAS Token",
          "required": true,
          "placeholder": "e.g: sas-token",
          "secret": true
        },
        {
          "type": "checkbox",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "AZURE_BLOB"
            }
          ],
          "label": "Use shared access signature (SAS) Tokens",
          "value": "useSASTokens",
          "default": false,
          "footerNote": "Use this to Grant limited access to Azure Storage resources using shared access signatures (SAS)"
        },
        {
          "type": "textareaInput",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "GCS"
            }
          ],
          "label": "Credentials",
          "labelNote": "GCP Service Account credentials JSON for RudderStack to use in loading data into your Google Cloud Storage",
          "value": "credentials",
          "regex": ".*",
          "required": true,
          "secret": true,
          "footerNote": "Create a service account in your GCP Project for RudderStack with roles of 'storage.objectCreator'"
        }
      ]
    }
  ]
}
