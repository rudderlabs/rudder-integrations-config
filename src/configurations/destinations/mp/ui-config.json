{
  "uiConfig": [
    {
      "title": "Connection Settings",
      "fields": [
        {
          "type": "textInput",
          "label": "API Token",
          "value": "token",
          "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{1,100})$",
          "regexErrorMessage": "Invalid API Token",
          "required": true,
          "placeholder": "c24f56ed8172XXXX6de5a5f0befe8b92",
          "secret": true
        },
        {
          "type": "textInput",
          "label": "Service Account Username",
          "value": "serviceAccountUserName",
          "required": false
        },
        {
          "type": "textInput",
          "label": "Service Account Secret",
          "value": "serviceAccountSecret",
          "required": false
        },
        {
          "type": "textInput",
          "label": "Project ID",
          "value": "projectId",
          "required": false
        },
        {
          "type": "singleSelect",
          "label": "Data Residency",
          "value": "dataResidency",
          "options": [
            {
              "name": "US",
              "value": "us"
            },
            {
              "name": "EU",
              "value": "eu"
            }
          ],
          "defaultOption": {
            "name": "US",
            "value": "us"
          },
          "required": false
        },
        {
          "type": "singleSelect",
          "label": "Identity Merge",
          "value": "identityMergeApi",
          "footerNote": "Select Identity Merge API. For more information about Simplified vs Original ID Merge API refer doc (https://help.mixpanel.com/hc/en-us/articles/14383975110292)",
          "options": [
            {
              "name": "Simplified ID Merge",
              "value": "simplified"
            },
            {
              "name": "Original ID Merge",
              "value": "original"
            }
          ],
          "defaultOption": {
            "name": "Original ID Merge",
            "value": "original"
          },
          "required": false
        },
        {
          "type": "singleSelect",
          "label": "User Deletion",
          "value": "userDeletionApi",
          "footerNote": "Select Mixpanel User Deletion API. For more information about difference between the two APIs refer doc (https://www.rudderstack.com/docs/destinations/streaming-destinations/mixpanel/#deleting-a-user)",
          "options": [
            {
              "name": "Delete Profile",
              "value": "engage"
            },
            {
              "name": "Delete Profile and Associated Events",
              "value": "task"
            }
          ],
          "defaultOption": {
            "name": "Delete Profile",
            "value": "engage"
          },
          "required": false
        },
        {
          "type": "textInput",
          "preRequisiteField": {
            "name": "userDeletionApi",
            "selectedValue": "task"
          },
          "label": "GDPR API Token",
          "value": "gdprApiToken",
          "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{1,100})$",
          "regexErrorMessage": "Invalid GDPR API Token",
          "required": true,
          "placeholder": "e.g: 7vwaux7et2tkXXXX1o0qtbt1x97n2je",
          "secret": true
        },
        {
          "type": "checkbox",
          "label": "Strict Mode",
          "value": "strictMode",
          "default": false,
          "footerNote": "If enabled, Mixpanel will validate the request and return errors per event that failed"
        },
        {
          "type": "checkbox",
          "label": "Ignore \"Do Not Track\"",
          "value": "ignoreDnt",
          "default": false,
          "footerNote": "If enabled, Mixpanel will ignore \"Do Not Track\" setting of browser"
        },
        {
          "type": "checkbox",
          "label": "Use Custom Page Event Name",
          "value": "useUserDefinedPageEventName",
          "default": false,
          "footerNote": "Send custom event name in page call"
        },
        {
          "type": "textInput",
          "label": "Page Event Name Template",
          "value": "userDefinedPageEventTemplate",
          "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,200})$",
          "regexErrorMessage": "Invalid Page Event Name",
          "required": true,
          "default": "Viewed {{ category }} {{ name }} page",
          "footerNote": "Assign a event name for your page calls. Text {{ }} will be replaced with event payload value",
          "preRequisites": {
            "fields": [
              {
                "configKey": "useUserDefinedPageEventName",
                "value": true
              }
            ]
          }
        },
        {
          "type": "checkbox",
          "label": "Use Custom Screen Event Name",
          "value": "useUserDefinedScreenEventName",
          "default": false,
          "footerNote": "Send custom event name in screen call"
        },
        {
          "type": "textInput",
          "label": "Screen Event Name Template",
          "value": "userDefinedScreenEventTemplate",
          "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,200})$",
          "regexErrorMessage": "Invalid Screen Event Name",
          "required": true,
          "default": "Viewed {{ category }} {{ name }} screen",
          "footerNote": "Assign a event name for your screen calls. Text {{ }} will be replaced with event payload value",
          "preRequisites": {
            "fields": [
              {
                "configKey": "useUserDefinedScreenEventName",
                "value": true
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Device Mode Settings",
      "fields": [
        {
          "type": "checkbox",
          "label": "Use Mixpanel People",
          "value": "people",
          "default": false,
          "footerNote": "This will send all of your identify calls to Mixpanel's People feature."
        },
        {
          "type": "checkbox",
          "label": "Automatically set all Traits as Super Properties and People Properties",
          "value": "setAllTraitsByDefault",
          "default": false,
          "footerNote": "While this is checked, our integration automatically sets all traits on identify calls as super properties and people properties if Mixpanel People is checked as well."
        },
        {
          "type": "dynamicCustomForm",
          "value": "superProperties",
          "customFields": [
            {
              "type": "textInput",
              "label": "Property to send as super Properties",
              "value": "property",
              "regex": "^(.{0,100})$",
              "regexErrorMessage": "Invalid Property Name",
              "required": false,
              "placeholder": "e.g: residence"
            }
          ]
        },
        {
          "type": "dynamicCustomForm",
          "value": "setOnceProperties",
          "footerNote": "Set this for those properties who's values are not supposed to change in profile level. Reference: https://developer.mixpanel.com/reference/profile-set-property-once",
          "customFields": [
            {
              "type": "textInput",
              "label": "Properties to set only once",
              "value": "property",
              "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
              "regexErrorMessage": "Invalid Property Name",
              "required": false,
              "placeholder": "e.g: joiningDate"
            }
          ]
        },
        {
          "type": "dynamicCustomForm",
          "value": "peopleProperties",
          "customFields": [
            {
              "type": "textInput",
              "label": "Traits to set as People Properties",
              "value": "property",
              "regex": "^(.{0,100})$",
              "regexErrorMessage": "Invalid Property Name",
              "required": false,
              "placeholder": "e.g: address"
            }
          ]
        },
        {
          "type": "dynamicCustomForm",
          "value": "eventIncrements",
          "customFields": [
            {
              "type": "textInput",
              "label": "Events to increment in People",
              "value": "property",
              "regex": "^(.{0,100})$",
              "regexErrorMessage": "Invalid Property Name",
              "required": false,
              "placeholder": "e.g: Added-to-cart"
            }
          ]
        },
        {
          "type": "dynamicCustomForm",
          "value": "propIncrements",
          "customFields": [
            {
              "type": "textInput",
              "label": "Properties to increment in People",
              "value": "property",
              "regex": "^(.{0,100})$",
              "regexErrorMessage": "Invalid Property Name",
              "required": false,
              "placeholder": "e.g: Cart-Value"
            }
          ]
        },
        {
          "type": "checkbox",
          "label": "Track All Pages to Mixpanel with a Consolidated Event Name",
          "value": "consolidatedPageCalls",
          "default": true,
          "footerNote": "This will track Loaded a Page events to Mixpanel for all page method calls. We enable this by default as it's how Mixpanel suggests sending these calls."
        },
        {
          "type": "checkbox",
          "label": "Track Categorized Pages to Mixpanel",
          "value": "trackCategorizedPages",
          "default": false,
          "footerNote": "This will track events to Mixpanel for page method calls that have a category associated with them. For example page('Docs', 'Index') would translate to Viewed Docs Index Page."
        },
        {
          "type": "checkbox",
          "label": "Track Named Pages to Mixpanel",
          "value": "trackNamedPages",
          "default": false,
          "footerNote": "This will track events to Mixpanel for page method calls that have a name associated with them. For example page('Signup') would translate to Viewed Signup Page."
        },
        {
          "type": "textInput",
          "label": "Source Name",
          "value": "sourceName",
          "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
          "regexErrorMessage": "Invalid Source Name",
          "required": false,
          "placeholder": "e.g: Rudder-JS",
          "footerNote": "This value, if it's not blank, will be sent as rudderstack_source_name to Mixpanel for every event/page/screen call."
        },
        {
          "type": "checkbox",
          "label": "Cross Subdomain Cookie",
          "value": "crossSubdomainCookie",
          "default": false,
          "footerNote": "This will allow the Mixpanel cookie to persist between different pages of your application."
        },
        {
          "type": "singleSelect",
          "label": "Persistence Type",
          "value": "persistenceType",
          "options": [
            {
              "name": "None",
              "value": "none"
            },
            {
              "name": "Cookie",
              "value": "cookie"
            },
            {
              "name": "Local Storage",
              "value": "localStorage"
            }
          ],
          "defaultOption": {
            "name": "Cookie",
            "value": "cookie"
          },
          "footerNote": "Choose the persistence type for Mixpanel cookie. If 'Local Storage' is selected, then any existing Mixpanel cookie value with the same persistence name will be transferred to 'Local Storage' and deleted."
        },
        {
          "type": "textInput",
          "label": "Persistence Name",
          "value": "persistenceName",
          "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
          "footerNote": "Enter a persistence name for the Mixpanel cookie."
        },
        {
          "type": "checkbox",
          "label": "Secure Cookie",
          "value": "secureCookie",
          "default": false,
          "footerNote": "This will mark the Mixpanel cookie as secure, meaning it will only be transmitted over https"
        }
      ]
    },
    {
      "title": "Group Key Settings",
      "fields": [
        {
          "type": "dynamicCustomForm",
          "value": "groupKeySettings",
          "label": "Group Keys",
          "customFields": [
            {
              "type": "textInput",
              "label": "Group Key",
              "value": "groupKey",
              "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
              "regexErrorMessage": "Invalid Group Key",
              "required": false,
              "placeholder": "company"
            }
          ]
        }
      ]
    },
    {
      "title": "Native SDK",
      "fields": [
        {
          "type": "checkbox",
          "label": "Use device-mode to send events",
          "value": "useNativeSDK",
          "default": false
        }
      ]
    },
    {
      "title": "Event Map Setting",
      "fields": [
        {
          "type": "checkbox",
          "value": "useNewMapping",
          "label": "Use New Mapping",
          "default": false,
          "footerNote": "It is recomended to set this to on as we are deprecating support for the old mapping soon."
        }
      ]
    },
    {
      "title": "Client-side Events Filtering",
      "sectionNote": "Applicable only for device-mode integrations. If enabled, it works only with either allowlisted or denylisted events",
      "fields": [
        {
          "type": "singleSelect",
          "value": "eventFilteringOption",
          "required": false,
          "options": [
            {
              "name": "Disable",
              "value": "disable"
            },
            {
              "name": "Allowlist",
              "value": "whitelistedEvents"
            },
            {
              "name": "Denylist",
              "value": "blacklistedEvents"
            }
          ],
          "defaultOption": {
            "name": "Disable",
            "value": "disable"
          }
        },
        {
          "type": "dynamicCustomForm",
          "value": "whitelistedEvents",
          "label": "Allowlist",
          "customFields": [
            {
              "type": "textInput",
              "value": "eventName",
              "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
              "required": false,
              "placeholder": "e.g: Anonymous Page Visit"
            }
          ]
        },
        {
          "type": "dynamicCustomForm",
          "value": "blacklistedEvents",
          "label": "Denylist",
          "customFields": [
            {
              "type": "textInput",
              "value": "eventName",
              "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
              "required": false,
              "placeholder": "e.g: Credit Card Added"
            }
          ]
        }
      ]
    },
    {
      "title": "Consent Settings",
      "fields": [
        {
          "type": "dynamicCustomForm",
          "value": "oneTrustCookieCategories",
          "label": "OneTrust Consent Categories",
          "footerNote": "The support for category names is deprecated. We recommend using the category IDs instead of the names as IDs are unique and less likely to change over time, making them a more reliable choice.",
          "customFields": [
            {
              "type": "textInput",
              "placeholder": "C0001",
              "value": "oneTrustCookieCategory",
              "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
              "label": "Category ID",
              "required": false
            }
          ],
          "preRequisites": {
            "featureFlags": [
              {
                "configKey": "AMP_enable-gcm",
                "value": false
              },
              {
                "configKey": "AMP_enable-gcm"
              }
            ],
            "featureFlagsCondition": "or"
          }
        },
        {
          "type": "dynamicCustomForm",
          "value": "ketchConsentPurposes",
          "label": "Ketch Consent Purposes",
          "customFields": [
            {
              "type": "textInput",
              "placeholder": "Marketing",
              "value": "purpose",
              "label": "Purpose ID",
              "regex": "^(.{0,100})$",
              "required": false
            }
          ],
          "preRequisites": {
            "featureFlags": [
              {
                "configKey": "AMP_enable-gcm",
                "value": false
              },
              {
                "configKey": "AMP_enable-gcm"
              }
            ],
            "featureFlagsCondition": "or"
          }
        },
        {
          "type": "dynamicCustomForm",
          "value": "consentManagement",
          "label": "Consent management settings",
          "footerNote": "The support for category names is deprecated. We recommend using the category IDs instead of the names as IDs are unique and less likely to change over time, making them a more reliable choice.",
          "customFields": [
            {
              "type": "singleSelect",
              "label": "Consent management provider",
              "value": "provider",
              "options": [
                {
                  "name": "Custom",
                  "value": "custom"
                },
                {
                  "name": "Ketch",
                  "value": "ketch"
                },
                {
                  "name": "OneTrust",
                  "value": "oneTrust"
                }
              ],
              "defaultOption": {
                "name": "OneTrust",
                "value": "oneTrust"
              },
              "required": true
            },
            {
              "type": "singleSelect",
              "label": "the required consent logic",
              "value": "resolutionStrategy",
              "options": [
                {
                  "name": "AND",
                  "value": "and"
                },
                {
                  "name": "OR",
                  "value": "or"
                }
              ],
              "required": true,
              "variant": "badge",
              "preRequisites": {
                "fields": [
                  {
                    "configKey": "provider",
                    "value": "custom"
                  }
                ]
              }
            },
            {
              "type": "dynamicCustomForm",
              "value": "consents",
              "label": "Enter consent category ID’s",
              "customFields": [
                {
                  "type": "textInput",
                  "placeholder": "Marketing",
                  "value": "consent",
                  "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
                  "required": false
                }
              ]
            }
          ],
          "preRequisites": {
            "featureFlags": [
              {
                "configKey": "AMP_enable-gcm",
                "value": true
              }
            ]
          }
        }
      ]
    }
  ]
}
