{
  "uiConfig": {
    "baseTemplate": [
      {
        "title": "Initial setup",
        "note": "Review how this destination is set up",
        "sections": [
          {
            "groups": [
              {
                "title": "Connection settings",
                "note": [
                  "Update your connection settings here.",
                  {
                    "text": "Follow this guide to get Account ID, Campaign ID and Experiment ID",
                    "link": "https://docs.developers.optimizely.com/web-experimentation/docs/locate-ids-used-for-apis#account-id"
                  }
                ],
                "icon": "settings",
                "fields": [
                  {
                    "type": "textInput",
                    "label": "Datafile URL",
                    "note": "Your datafile URL From Settings -> Environments",
                    "configKey": "dataFileUrl",
                    "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|(?!.*\\.ngrok\\.io)^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$|^$",
                    "regexErrorMessage": "Invalid Datafile URL",
                    "placeholder": "e.g. https://cdn.optimizely.com/json/3Cee2qXeMgXXXXk8Sh5qX.json",
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "connectionMode.cloud",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.web",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.shopify",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.android",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.unity",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.ios",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.amp",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.flutter",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.reactnative",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.warehouse",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.cordova",
                          "value": "cloud"
                        }
                      ],
                      "condition": "or"
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "Account ID",
                    "note": "Your Optimizely Account ID.",
                    "configKey": "accountId",
                    "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^([0-9]{1,100})$",
                    "regexErrorMessage": "Invalid Account ID",
                    "placeholder": "e.g.1849XX01456",
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "connectionMode.cloud",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.web",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.shopify",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.android",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.unity",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.ios",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.amp",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.flutter",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.reactnative",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.warehouse",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.cordova",
                          "value": "cloud"
                        }
                      ],
                      "condition": "or"
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "Campaign ID",
                    "configKey": "campaignId",
                    "note": "You can override this field by passing Campaign ID in the event's integration object",
                    "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^([0-9]{1,100})$",
                    "regexErrorMessage": "Invalid Campaign ID",
                    "placeholder": "e.g. 1823XX31431",
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "connectionMode.cloud",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.web",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.shopify",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.android",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.unity",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.ios",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.amp",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.flutter",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.reactnative",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.warehouse",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.cordova",
                          "value": "cloud"
                        }
                      ],
                      "condition": "or"
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "Experiment ID",
                    "configKey": "experimentId",
                    "note": "You can override this field by passing Experiment ID in the event's integration object",
                    "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^([0-9]{1,100})$",
                    "regexErrorMessage": "Invalid Experiment ID",
                    "placeholder": "e.g. 1874XX20211",
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "connectionMode.cloud",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.web",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.shopify",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.android",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.unity",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.ios",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.amp",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.flutter",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.reactnative",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.warehouse",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.cordova",
                          "value": "cloud"
                        }
                      ],
                      "condition": "or"
                    }
                  }
                ]
              }
            ]
          },
          {
            "groups": [
              {
                "title": "Connection mode",
                "note": [
                  "Update how you want to route events from your source to destination.",
                  {
                    "text": "Get help deciding",
                    "link": "https://www.rudderstack.com/docs/destinations/rudderstack-connection-modes/"
                  }
                ],
                "icon": "sliders",
                "fields": []
              }
            ]
          }
        ]
      },
      {
        "title": "Configuration settings",
        "note": "Manage the settings for your destination",
        "sections": [
          {
            "groups": [
              {
                "title": "Page settings",
                "note": "Set how you want to send your page calls to Optimizely",
                "icon": "file",
                "callout": {
                  "message": "These settings are applicable for Screen call as well",
                  "type": "info"
                },
                "preRequisites": {
                  "fields": [
                    {
                      "configKey": "connectionMode.cloud",
                      "value": "cloud"
                    },
                    {
                      "configKey": "connectionMode.web",
                      "value": "cloud"
                    },
                    {
                      "configKey": "connectionMode.shopify",
                      "value": "cloud"
                    },
                    {
                      "configKey": "connectionMode.android",
                      "value": "cloud"
                    },
                    {
                      "configKey": "connectionMode.unity",
                      "value": "cloud"
                    },
                    {
                      "configKey": "connectionMode.ios",
                      "value": "cloud"
                    },
                    {
                      "configKey": "connectionMode.amp",
                      "value": "cloud"
                    },
                    {
                      "configKey": "connectionMode.flutter",
                      "value": "cloud"
                    },
                    {
                      "configKey": "connectionMode.reactnative",
                      "value": "cloud"
                    },
                    {
                      "configKey": "connectionMode.warehouse",
                      "value": "cloud"
                    },
                    {
                      "configKey": "connectionMode.cordova",
                      "value": "cloud"
                    }
                  ],
                  "condition": "or"
                },
                "fields": [
                  {
                    "type": "checkbox",
                    "label": "Track Categorized Pages",
                    "note": [
                      "To track categorized pages enable this setting and map the Page Category to the Optimizely event name in the 'RudderStack Page Name/Category to Optimizely event mappings' setting. Ensure that the event exists in Optimizely.",
                      {
                        "text": "Learn more here",
                        "link": "https://docs.developers.optimizely.com/experimentation-data/docs/event-api-getting-started#for-optimizely-feature-experimentation-experimentse"
                      }
                    ],
                    "configKey": "trackCategorizedPages",
                    "default": false
                  },
                  {
                    "type": "checkbox",
                    "label": "Track Named Pages",
                    "note": [
                      "To track named pages enable this setting and map the Page Name to the Optimizely event name in the 'RudderStack Page Name/Category to Optimizely event mappings' setting. Ensure that the event exists in Optimizely.",
                      {
                        "text": "Learn more here",
                        "link": "https://docs.developers.optimizely.com/experimentation-data/docs/event-api-getting-started#for-optimizely-feature-experimentation-experimentse"
                      }
                    ],
                    "configKey": "trackNamedPages",
                    "default": false
                  }
                ]
              }
            ]
          },
          {
            "title": "Destination settings",
            "note": "Configure advanced destination-specific settings here",
            "icon": "settings",
            "groups": [
              {
                "title": "Optimizely Fullstack IT",
                "fields": [
                  {
                    "type": "checkbox",
                    "label": "Track Known Users",
                    "configKey": "trackKnownUsers",
                    "default": true
                  },
                  {
                    "type": "checkbox",
                    "label": "Anonymize IP",
                    "configKey": "anonymizeIp",
                    "default": false,
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "connectionMode.cloud",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.web",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.shopify",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.android",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.unity",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.ios",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.amp",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.flutter",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.reactnative",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.warehouse",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.cordova",
                          "value": "cloud"
                        }
                      ],
                      "condition": "or"
                    }
                  },
                  {
                    "type": "checkbox",
                    "label": "Enrich Decisions",
                    "configKey": "enrichDecisions",
                    "default": true,
                    "note": "Toggle this option to enable Optimizely Experimentation's Enriched Events Export functionality. Enabling this functionality allows for enhanced data collection and analysis, providing valuable insights for decision-making purposes.",
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "connectionMode.cloud",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.web",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.shopify",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.android",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.unity",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.ios",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.amp",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.flutter",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.reactnative",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.warehouse",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.cordova",
                          "value": "cloud"
                        }
                      ],
                      "condition": "or"
                    }
                  },
                  {
                    "type": "textInput",
                    "label": "Project ID",
                    "configKey": "projectId",
                    "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
                    "regexErrorMessage": "Invalid Project ID",
                    "placeholder": "e.g. 1849XX01456",
                    "note": "Your Project ID from Experiments>API Names. It is recommended to send Project ID",
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "connectionMode.cloud",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.web",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.shopify",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.android",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.unity",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.ios",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.amp",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.flutter",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.reactnative",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.warehouse",
                          "value": "cloud"
                        },
                        {
                          "configKey": "connectionMode.cordova",
                          "value": "cloud"
                        }
                      ],
                      "condition": "or"
                    }
                  }
                ]
              }
            ]
          },
          {
            "title": "Other settings",
            "note": "Configure advanced RudderStack features here",
            "icon": "otherSettings",
            "groups": [
              {
                "title": "Client-side event filtering",
                "note": "Decide what events are allowed (allowlisting) and blocked (denylisting)",
                "preRequisites": {
                  "fields": [
                    {
                      "configKey": "connectionModes.webDevice",
                      "value": true
                    },
                    {
                      "configKey": "connectionModes.mobileDevice",
                      "value": true
                    }
                  ],
                  "condition": "or"
                },
                "fields": [
                  {
                    "type": "singleSelect",
                    "label": "Choose if you want to turn on event filtering: ",
                    "configKey": "eventFilteringOption",
                    "note": "You must select either allowlist or denylist to enable events filtering",
                    "options": [
                      {
                        "label": "Disabled",
                        "value": "disable"
                      },
                      {
                        "label": "Filter via allowlist",
                        "value": "whitelistedEvents"
                      },
                      {
                        "label": "Filter via denylist",
                        "value": "blacklistedEvents"
                      }
                    ],
                    "default": "disable"
                  },
                  {
                    "type": "tagInput",
                    "label": "Allowlisted events",
                    "note": "Input the events you want to allowlist.\nInput separate events by pressing 'Enter'.",
                    "configKey": "whitelistedEvents",
                    "tagKey": "eventName",
                    "placeholder": "e.g: Anonymous page visit",
                    "default": [
                      {
                        "eventName": ""
                      }
                    ],
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "eventFilteringOption",
                          "value": "whitelistedEvents"
                        }
                      ]
                    }
                  },
                  {
                    "type": "tagInput",
                    "label": "Denylisted events",
                    "note": "Input the events you want to denylist.\nInput separate events by pressing 'Enter'.",
                    "configKey": "blacklistedEvents",
                    "tagKey": "eventName",
                    "placeholder": "e.g: Anonymous page visit",
                    "default": [
                      {
                        "eventName": ""
                      }
                    ],
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "eventFilteringOption",
                          "value": "blacklistedEvents"
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            "id": "consentSettings",
            "title": "Consent settings",
            "note": "Configure consent settings for each provider here",
            "icon": "settings",
            "groups": [
              {
                "title": "OneTrust consent settings",
                "note": [
                  "Enter your OneTrust consent category IDs if you have them configured. The support for category names is deprecated. We recommend using the category IDs instead of the names as IDs are unique and less likely to change over time, making them a more reliable choice.",
                  {
                    "text": "Learn more",
                    "link": "https://www.rudderstack.com/docs/sources/event-streams/sdks/consent-manager/onetrust/"
                  },
                  " about RudderStack's OneTrust Consent Management feature."
                ],
                "fields": [
                  {
                    "type": "tagInput",
                    "label": "Consent categories",
                    "note": "Input your OneTrust category IDs by pressing 'Enter' after each entry.",
                    "configKey": "oneTrustCookieCategories",
                    "tagKey": "oneTrustCookieCategory",
                    "placeholder": "e.g: C0001",
                    "default": [
                      {
                        "oneTrustCookieCategory": ""
                      }
                    ]
                  }
                ],
                "preRequisites": {
                  "featureFlags": [
                    {
                      "configKey": "AMP_enable-gcm",
                      "value": false
                    },
                    {
                      "configKey": "AMP_enable-gcm"
                    }
                  ],
                  "featureFlagsCondition": "or"
                }
              }
            ]
          }
        ]
      },
      {
        "title": "Event mapping",
        "note": "Map RudderStack to Optimizely events",
        "hideEditIcon": true,
        "sections": [
          {
            "groups": [
              {
                "title": "RudderStack to Optimizely mappings",
                "preRequisites": {
                  "fields": [
                    {
                      "configKey": "connectionMode.cloud",
                      "value": "cloud"
                    },
                    {
                      "configKey": "connectionMode.web",
                      "value": "cloud"
                    },
                    {
                      "configKey": "connectionMode.shopify",
                      "value": "cloud"
                    },
                    {
                      "configKey": "connectionMode.android",
                      "value": "cloud"
                    },
                    {
                      "configKey": "connectionMode.unity",
                      "value": "cloud"
                    },
                    {
                      "configKey": "connectionMode.ios",
                      "value": "cloud"
                    },
                    {
                      "configKey": "connectionMode.amp",
                      "value": "cloud"
                    },
                    {
                      "configKey": "connectionMode.flutter",
                      "value": "cloud"
                    },
                    {
                      "configKey": "connectionMode.reactnative",
                      "value": "cloud"
                    },
                    {
                      "configKey": "connectionMode.warehouse",
                      "value": "cloud"
                    },
                    {
                      "configKey": "connectionMode.cordova",
                      "value": "cloud"
                    }
                  ],
                  "condition": "or"
                },
                "fields": [
                  {
                    "type": "redirect",
                    "redirectGroupKey": "customEventMapping",
                    "label": "RudderStack to Optimizely event and attribute mappings",
                    "note": "Map your RudderStack events/attributes to Optimizely custom events/attributes"
                  },
                  {
                    "type": "redirect",
                    "redirectGroupKey": "pageEventMapping",
                    "label": "RudderStack Page Name/Category to Optimizely event mappings",
                    "note": "Map your RudderStack page name/Category to Optimizely custom events",
                    "preRequisites": {
                      "fields": [
                        {
                          "configKey": "trackCategorizedPages",
                          "value": true
                        },
                        {
                          "configKey": "trackNamedPages",
                          "value": true
                        }
                      ],
                      "condition": "or"
                    }
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "sdkTemplate": {
      "title": "SDK settings",
      "fields": [
        {
          "type": "checkbox",
          "label": "Sends the experiment and variation information",
          "configKey": "listen",
          "note": "Sends the experiment and variation information as properties on a track call",
          "default": true
        },
        {
          "type": "checkbox",
          "label": "Non-Interaction Event",
          "configKey": "nonInteraction",
          "note": "Specifies the Experiment Viewed as a non-interaction event for Google Analytics",
          "default": true
        }
      ]
    },
    "consentSettingsTemplate": {
      "title": "Consent settings",
      "note": "not visible in the ui",
      "fields": [
        {
          "type": "dynamicCustomForm",
          "configKey": "consentManagement",
          "default": [],
          "rowFields": [
            {
              "type": "singleSelect",
              "label": "Consent management provider",
              "configKey": "provider",
              "options": [
                {
                  "label": "Custom",
                  "value": "custom"
                },
                {
                  "label": "Ketch",
                  "value": "ketch"
                },
                {
                  "label": "OneTrust",
                  "value": "oneTrust"
                }
              ],
              "default": "oneTrust",
              "required": true
            },
            {
              "type": "singleSelect",
              "label": "the required consent logic",
              "configKey": "resolutionStrategy",
              "options": [
                {
                  "label": "AND",
                  "value": "and"
                },
                {
                  "label": "OR",
                  "value": "or"
                }
              ],
              "required": true,
              "variant": "badge",
              "preRequisites": {
                "fields": [
                  {
                    "configKey": "provider",
                    "value": "custom"
                  }
                ]
              }
            },
            {
              "type": "tagInput",
              "label": "Enter consent category ID’s",
              "note": "Input your consent category IDs by pressing ‘Enter’ after each entry. The support for category names is deprecated. We recommend using the category IDs instead of the names as IDs are unique and less likely to change over time, making them a more reliable choice.",
              "configKey": "consents",
              "tagKey": "consent",
              "placeholder": "e.g: Marketing",
              "default": [
                {
                  "consent": ""
                }
              ]
            }
          ],
          "preRequisites": {
            "featureFlags": [
              {
                "configKey": "AMP_enable-gcm",
                "value": true
              }
            ]
          }
        }
      ]
    },
    "redirectGroups": {
      "customEventMapping": {
        "tabs": [
          {
            "name": "Custom track events",
            "fields": [
              {
                "type": "mapping",
                "label": "Map your RudderStack events to Optimizely events for Track events",
                "note": "Map RudderStack events/properties to Optimizely custom events/properties using either our mapping interface or JSON text editor.  Learn more about mappings in our docs.",
                "configKey": "eventMapping",
                "default": [],
                "columns": [
                  {
                    "type": "textInput",
                    "key": "from",
                    "label": "RudderStack Event",
                    "placeholder": "e.g: Product Searched"
                  },
                  {
                    "type": "textInput",
                    "key": "to",
                    "label": "Optimizely Event",
                    "placeholder": "e.g: Searched"
                  }
                ]
              }
            ]
          },
          {
            "name": "Custom attributes",
            "fields": [
              {
                "type": "mapping",
                "label": "Map your RudderStack attributes to Optimizely attributes",
                "note": "Map RudderStack attributes to Optimizely custom attributes using either our mapping interface or JSON text editor.  Learn more about mappings in our docs.",
                "configKey": "attributeMapping",
                "default": [],
                "columns": [
                  {
                    "type": "textInput",
                    "key": "from",
                    "label": "RudderStack Attribute",
                    "placeholder": "e.g: firstName"
                  },
                  {
                    "type": "textInput",
                    "key": "to",
                    "label": "Optimizely Attribute",
                    "placeholder": "e.g: first_name"
                  }
                ]
              }
            ]
          }
        ]
      },
      "pageEventMapping": {
        "fields": [
          {
            "type": "mapping",
            "label": "Map your RudderStack Page Name/Category to Optimizely events",
            "note": "Map RudderStack Page Name/Category to Optimizely events using either our mapping interface or JSON text editor.  Learn more about mappings in our docs.",
            "configKey": "pageMapping",
            "default": [],
            "columns": [
              {
                "type": "textInput",
                "key": "from",
                "label": "RudderStack Page Name/Category",
                "placeholder": "e.g: Index"
              },
              {
                "type": "textInput",
                "key": "to",
                "label": "Optimizely Event",
                "placeholder": "e.g: Viewed Home Page"
              }
            ]
          }
        ]
      }
    }
  }
}
