{
  "configSchema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "required": ["reportSuiteIds"],
    "type": "object",
    "properties": {
      "trackingServerUrl": {
        "type": "string",
        "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|(?!.*\\.ngrok\\.io)^(.{0,100})$"
      },
      "trackingServerSecureUrl": {
        "type": "string",
        "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|(?!.*\\.ngrok\\.io)^(.{0,100})$"
      },
      "reportSuiteIds": {
        "type": "string",
        "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{1,300})$"
      },
      "sslHeartbeat": {
        "type": "boolean"
      },
      "heartbeatTrackingServerUrl": {
        "type": "string",
        "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|(?!.*\\.ngrok\\.io)^(.{0,100})$"
      },
      "useUtf8Charset": {
        "type": "boolean"
      },

      "useSecureServerSide": {
        "type": "boolean"
      },

      "proxyNormalUrl": {
        "type": "string",
        "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|(?!.*\\.ngrok\\.io)^(.{0,100})$"
      },

      "proxyHeartbeatUrl": {
        "type": "string",
        "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|(?!.*\\.ngrok\\.io)^(.{0,100})$"
      },
      "eventsToTypes": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "from": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            },
            "to": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(initHeartbeat|heartbeatPlaybackStarted|heartbeatPlaybackPaused|heartbeatPlaybackResumed|heartbeatPlaybackCompleted|heartbeatPlaybackInterrupted|heartbeatContentStarted|heartbeatContentComplete|heartbeatAdBreakStarted|heartbeatAdBreakCompleted|heartbeatAdStarted|heartbeatAdCompleted|heartbeatAdSkipped|heartbeatSeekStarted|heartbeatSeekCompleted|heartbeatBufferStarted|heartbeatBufferCompleted|heartbeatQualityUpdated|heartbeatUpdatePlayhead)|^$"
            }
          }
        }
      },
      "marketingCloudOrgId": {
        "type": "string",
        "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
      },
      "dropVisitorId": {
        "type": "boolean"
      },
      "timestampOption": {
        "type": "string",
        "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(disabled|hybrid|optional|enabled)$"
      },
      "timestampOptionalReporting": {
        "type": "boolean"
      },
      "noFallbackVisitorId": {
        "type": "boolean"
      },
      "preferVisitorId": {
        "type": "boolean"
      },
      "rudderEventsToAdobeEvents": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "from": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            },
            "to": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            }
          }
        }
      },
      "trackPageName": {
        "type": "boolean"
      },
      "contextDataMapping": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "from": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            },
            "to": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            }
          }
        }
      },
      "contextDataPrefix": {
        "type": "string",
        "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
      },
      "useLegacyLinkName": {
        "type": "boolean"
      },
      "pageNameFallbackTostring": {
        "type": "boolean"
      },
      "mobileEventMapping": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "from": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            },
            "to": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            }
          }
        }
      },
      "sendFalseValues": {
        "type": "boolean"
      },
      "eVarMapping": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "from": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            },
            "to": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            }
          }
        }
      },
      "hierMapping": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "from": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            },
            "to": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            }
          }
        }
      },
      "listMapping": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "from": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            },
            "to": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            }
          }
        }
      },
      "listDelimiter": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "from": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            },
            "to": {
              "type": "string",
              "pattern": "^$|(^env[.].+)|^(\\||:|,|;|/)$"
            }
          }
        }
      },
      "customPropsMapping": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "from": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            },
            "to": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            }
          }
        }
      },
      "propsDelimiter": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "from": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            },
            "to": {
              "type": "string",
              "pattern": "^$|(^env[.].+)|^(\\||:|,|;|/)$"
            }
          }
        }
      },
      "eventMerchEventToAdobeEvent": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "from": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            },
            "to": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            }
          }
        }
      },
      "eventMerchProperties": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "eventMerchProperties": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            }
          }
        }
      },
      "productMerchEventToAdobeEvent": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "from": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            },
            "to": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            }
          }
        }
      },
      "productMerchProperties": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "productMerchProperties": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            }
          }
        }
      },
      "productMerchEvarsMap": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "from": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            },
            "to": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            }
          }
        }
      },
      "productIdentifier": {
        "type": "string",
        "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(name|id|sku)$"
      },
      "useNativeSDK": {
        "type": "object",
        "properties": {
          "web": {
            "type": "boolean"
          },
          "ios": {
            "type": "boolean"
          },
          "android": {
            "type": "boolean"
          }
        }
      },
      "eventFilteringOption": {
        "type": "string",
        "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(disable|whitelistedEvents|blacklistedEvents)$"
      },
      "whitelistedEvents": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "eventName": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            }
          }
        }
      },
      "blacklistedEvents": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "eventName": {
              "type": "string",
              "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
            }
          }
        }
      },
      "oneTrustCookieCategories": {
        "type": "object",
        "properties": {
          "web": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "oneTrustCookieCategory": {
                  "type": "string",
                  "pattern": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$"
                }
              }
            }
          }
        }
      }
    }
  }
}
