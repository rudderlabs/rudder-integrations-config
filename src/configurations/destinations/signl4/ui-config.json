{
  "uiConfig": [
    {
      "title": "Connection Settings",
      "fields": [
        {
          "type": "textInput",
          "label": "API Key",
          "value": "apiKey",
          "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{1,300})$",
          "regexErrorMessage": "Invalid API Key",
          "required": true,
          "placeholder": "e.g. gi1XXXt8xy",
          "secret": true,
          "footerNote": "Your SIGNL4 team secret"
        }
      ]
    },
    {
      "title": "X-S4-Service",
      "fields": [
        {
          "type": "textInput",
          "label": "Default Value",
          "value": "s4ServiceValue",
          "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
          "regexErrorMessage": "Invalid X-S4-Service Value",
          "required": false,
          "placeholder": "e.g. Security",
          "secret": false
        },
        {
          "type": "textInput",
          "label": "RudderStack property name",
          "value": "s4ServiceProperty",
          "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
          "regexErrorMessage": "Invalid property name",
          "required": false,
          "placeholder": "e.g. service",
          "secret": false,
          "footerNote": "Assigns the Signl to the service/system category with the specified name"
        }
      ]
    },
    {
      "title": "X-S4-Location",
      "fields": [
        {
          "type": "textInput",
          "label": "Default Value",
          "value": "s4LocationValue",
          "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
          "regexErrorMessage": "Invalid X-S4-Location Value",
          "required": false,
          "placeholder": "e.g. 40.6XX3111,-73.7XX1391",
          "secret": false
        },
        {
          "type": "textInput",
          "label": "RudderStack property name",
          "value": "s4LocationProperty",
          "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
          "regexErrorMessage": "Invalid property name",
          "required": false,
          "placeholder": "e.g. location",
          "footerNote": "Transmit location information ('latitude, longitude') with your event"
        }
      ]
    },
    {
      "title": "X-S4-AlertingScenario",
      "fields": [
        {
          "type": "singleSelect",
          "label": "Default Value",
          "value": "s4AlertingScenarioValue",
          "required": false,
          "options": [
            {
              "name": "single_ack",
              "value": "single_ack"
            },
            {
              "name": "multi_ack",
              "value": "multi_ack"
            },
            {
              "name": "emergency",
              "value": "emergency"
            }
          ],
          "defaultOption": {
            "name": "single_ack",
            "value": "single_ack"
          }
        },
        {
          "type": "textInput",
          "label": "RudderStack property name",
          "value": "s4AlertingScenarioProperty",
          "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
          "regexErrorMessage": "Invalid property name",
          "required": false,
          "placeholder": "e.g. alertingScenario",
          "secret": false,
          "footerNote": "Allows to control how SIGNL4 notifies the team"
        }
      ]
    },
    {
      "title": "X-S4-ExternalID",
      "fields": [
        {
          "type": "textInput",
          "label": "Default Value",
          "value": "s4ExternalIDValue",
          "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
          "regexErrorMessage": "Invalid X-S4-ExternalID",
          "required": false,
          "placeholder": "e.g. INC0XX210",
          "secret": false
        },
        {
          "type": "textInput",
          "label": "RudderStack property name",
          "value": "s4ExternalIDProperty",
          "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
          "regexErrorMessage": "Invalid property name",
          "required": false,
          "placeholder": "e.g. externalId",
          "secret": false,
          "footerNote": "If the event originates from a record in a 3rd party system, use this parameter to pass the unique ID of that record"
        }
      ]
    },
    {
      "title": "X-S4-Status",
      "fields": [
        {
          "type": "singleSelect",
          "label": "Default Value",
          "value": "s4StatusValue",
          "required": false,
          "options": [
            {
              "name": "new",
              "value": "new"
            },
            {
              "name": "acknowledged",
              "value": "acknowledged"
            },
            {
              "name": "resolved",
              "value": "resolved"
            }
          ],
          "defaultOption": {
            "name": "new",
            "value": "new"
          }
        },
        {
          "type": "textInput",
          "label": "RudderStack property name",
          "value": "s4StatusProperty",
          "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
          "regexErrorMessage": "Invalid property name",
          "required": false,
          "placeholder": "e.g. status",
          "secret": false,
          "footerNote": "Provide the value of status of the alert from the above options"
        }
      ]
    },
    {
      "title": "X-S4-Filtering",
      "fields": [
        {
          "type": "checkbox",
          "label": "Enable to add filter",
          "value": "s4Filter",
          "default": false,
          "footerNote": "Set it to true to apply event filtering for this event"
        }
      ]
    },
    {
      "title": "Event to title mapping",
      "fields": [
        {
          "type": "dynamicForm",
          "label": "Map event name with the alert title",
          "labelLeft": "Event Name",
          "labelRight": "Alert Title",
          "value": "eventToTitleMapping",
          "keyLeft": "from",
          "keyRight": "to",
          "placeholderLeft": "e.g: Product Viewed",
          "placeholderRight": "e.g: Viewed Product"
        }
      ]
    },
    {
      "title": "Consent Settings",
      "fields": [
        {
          "type": "dynamicCustomForm",
          "value": "oneTrustCookieCategories",
          "label": "OneTrust Consent Category IDs",
          "footerNote": "The support for category names is deprecated. We recommend using the category IDs instead of the names as IDs are unique and less likely to change over time, making them a more reliable choice.",
          "customFields": [
            {
              "type": "textInput",
              "placeholder": "C0001",
              "value": "oneTrustCookieCategory",
              "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
              "label": "Category ID",
              "required": false
            }
          ],
          "preRequisites": {
            "featureFlags": [
              {
                "configKey": "AMP_enable-gcm",
                "value": false
              },
              {
                "configKey": "AMP_enable-gcm"
              }
            ],
            "featureFlagsCondition": "or"
          }
        },
        {
          "type": "dynamicCustomForm",
          "value": "ketchConsentPurposes",
          "label": "Ketch Consent Purpose IDs",
          "customFields": [
            {
              "type": "textInput",
              "placeholder": "marketing",
              "value": "purpose",
              "label": "Purpose ID",
              "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
              "required": false
            }
          ],
          "preRequisites": {
            "featureFlags": [
              {
                "configKey": "AMP_enable-gcm",
                "value": false
              },
              {
                "configKey": "AMP_enable-gcm"
              }
            ],
            "featureFlagsCondition": "or"
          }
        },
        {
          "type": "dynamicCustomForm",
          "value": "consentManagement",
          "label": "Consent management settings",
          "footerNote": "The support for category names is deprecated. We recommend using the category IDs instead of the names as IDs are unique and less likely to change over time, making them a more reliable choice.",
          "customFields": [
            {
              "type": "singleSelect",
              "label": "Consent management provider",
              "value": "provider",
              "options": [
                {
                  "name": "Custom",
                  "value": "custom"
                },
                {
                  "name": "Ketch",
                  "value": "ketch"
                },
                {
                  "name": "OneTrust",
                  "value": "oneTrust"
                }
              ],
              "defaultOption": {
                "name": "OneTrust",
                "value": "oneTrust"
              },
              "required": true
            },
            {
              "type": "singleSelect",
              "label": "the required consent logic",
              "value": "resolutionStrategy",
              "options": [
                {
                  "name": "AND",
                  "value": "and"
                },
                {
                  "name": "OR",
                  "value": "or"
                }
              ],
              "required": true,
              "variant": "badge",
              "preRequisites": {
                "fields": [
                  {
                    "configKey": "provider",
                    "value": "custom"
                  }
                ]
              }
            },
            {
              "type": "dynamicCustomForm",
              "value": "consents",
              "label": "Enter consent category ID’s",
              "customFields": [
                {
                  "type": "textInput",
                  "placeholder": "Marketing",
                  "value": "consent",
                  "regex": "(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$",
                  "required": false
                }
              ]
            }
          ],
          "preRequisites": {
            "featureFlags": [
              {
                "configKey": "AMP_enable-gcm",
                "value": true
              }
            ]
          }
        }
      ]
    }
  ]
}
