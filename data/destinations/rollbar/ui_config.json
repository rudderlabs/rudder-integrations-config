{
  "uiConfig": [
    {
      "title": "Connection Settings",
      "fields": [
        {
          "type": "textInput",
          "label": "Access Token",
          "value": "accessToken",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid Access Token",
          "required": true,
          "placeholder": "e.g: 96d96af0cdb847f4b1a4e7cc13255705",
          "secret": true,
          "footerNote": "Access token provided by rollbar"
        }
      ]
    },
    {
      "title": "Native SDK",
      "fields": [
        {
          "type": "defaultCheckbox",
          "label": "Use device-mode to send events",
          "value": "useNativeSDK",
          "default": true
        }
      ]
    },
    {
      "title": "Other Settings",
      "fields": [
        {
          "type": "checkbox",
          "label": "Capture Uncaught Exceptions",
          "value": "captureUncaughtException",
          "default": true,
          "footerNote": "Record uncaught exceptions from window.onerror."
        },
        {
          "type": "checkbox",
          "label": "Capture Unhandled Rejections",
          "value": "captureUnhandledRejections",
          "default": false,
          "footerNote": "Catch and report unhandled Promise rejections, such as Promise failures that do not have a corresponding .then(null, function(e) {}) handler."
        },
        {
          "type": "checkbox",
          "label": "Guess Uncaught Frames",
          "value": "guessUncaughtFrames",
          "default": false,
          "footerNote": "When this option is enabled, Rollbar will guess which frames the error was thrown from when the browser does not provide line and column numbers."
        },
        {
          "type": "textInput",
          "label": "Code Version",
          "value": "codeVersion",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid ",
          "required": false,
          "placeholder": "e.g. 1.1.1",
          "secret": false,
          "footerNote": "this is a version string, such as a version number. Default Version is an empty String"
        },
        {
          "type": "textInput",
          "label": "Environment",
          "value": "environment",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid ",
          "required": false,
          "placeholder": "e.g. production",
          "secret": false,
          "footerNote": "The environment the code is running in. If user doesn't set any environment name, the events will be visible for 'unknown' environment in rollbar"
        },
        {
          "type": "dynamicCustomForm",
          "value": "ignoredMessages",
          "label": "Ignored Messages",
          "footerNote": "If a specific exception message is needed to be ignored, say for a third-party browser plugin that is throwing errors, those can be added here and Rollbar will ignore exceptions matching those messages.",
          "customFields": [
            {
              "type": "textInput",
              "value": "singleIgnoredMessage",
              "required": false,
              "placeholder": "e.g: Message Name"
            }
          ]
        },
        {
          "type": "checkbox",
          "label": "Source Map",
          "value": "sourceMapEnabled",
          "default": false,
          "footerNote": "When this option is enabled, Rudderstack let Rollbar know that source map is enabled"
        }
      ]
    },
    {
      "title": "Client-side Events Filtering",
      "sectionNote": "Applicable only for device-mode integrations. If enabled, it works only with either allowlisted or denylisted events",
      "fields": [
        {
          "type": "singleSelect",
          "value": "eventFilteringOption",
          "required": false,
          "options": [
            {
              "name": "Disable",
              "value": "disable"
            },
            {
              "name": "Allowlist",
              "value": "whitelistedEvents"
            },
            {
              "name": "Denylist",
              "value": "blacklistedEvents"
            }
          ],
          "defaultOption": {
            "name": "Disable",
            "value": "disable"
          }
        },
        {
          "type": "dynamicCustomForm",
          "value": "whitelistedEvents",
          "label": "Allowlist",
          "customFields": [
            {
              "type": "textInput",
              "value": "eventName",
              "required": false,
              "placeholder": "e.g: Anonymous Page Visit"
            }
          ]
        },
        {
          "type": "dynamicCustomForm",
          "value": "blacklistedEvents",
          "label": "Denylist",
          "customFields": [
            {
              "type": "textInput",
              "value": "eventName",
              "required": false,
              "placeholder": "e.g: Credit Card Added"
            }
          ]
        }
      ]
    },
    {
      "title": "Consent Settings",
      "fields": [
        {
          "type": "dynamicCustomForm",
          "value": "oneTrustCookieCategories",
          "label": "OneTrust Cookie Categories",
          "customFields": [
            {
              "type": "textInput",
              "placeholder": "Marketing",
              "value": "oneTrustCookieCategory",
              "label": "Category Name/ID",
              "required": false
            }
          ]
        }
      ]
    }
  ]
}
