[
  {
    "config": {
      "accessKeyId": "test-access-key-id",
      "accessKey": "test-access-key",
      "roleBasedAuth": false,
      "region": "us-east-1"
    },
    "result": false,
    "err": [" must have required property 'lambda'"]
  },
  {
    "config": {
      "accessKeyId": "test-access-key-id",
      "accessKey": "test-access-key",
      "roleBasedAuth": false,
      "region": "us-east-1",
      "lambda": "myFunction"
    },
    "result": true
  },
  {
    "config": {
      "accessKeyId": "test-access-key-id",
      "accessKey": "test-access-key",
      "roleBasedAuth": false,
      "region": "ufgrgrt",
      "lambda": "myFunction"
    },
    "result": true
  },
  {
    "config": {
      "iamRoleARN": "arn:aws:iam::123456789012:role/LambdaAccess",
      "roleBasedAuth": true,
      "region": "us-east-2",
      "lambda": "myFunction",
      "maxBatchSize": "50"
    },
    "result": true
  },
  {
    "config": {
      "iamRoleARN": "arn:aws:iam::123456789012:role/LambdaAccess",
      "roleBasedAuth": true,
      "region": "us-east-2",
      "lambda": "myFunction",
      "enableBatchInput": true,
      "maxBatchSize": "fsdfs"
    },
    "result": false,
    "err": [
      "maxBatchSize must match pattern \"(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^[1-9]\\d*$\"",
      " must match \"then\" schema"
    ]
  },
  {
    "testTitle": "With valid multiple consent management providers config",
    "config": {
      "accessKeyId": "test-access-key-id",
      "accessKey": "test-access-key",
      "roleBasedAuth": false,
      "region": "us-east-1",
      "lambda": "myFunction",
      "consentManagement": {
        "web": [
          {
            "provider": "custom",
            "consents": [
              {
                "consent": "Marketing"
              }
            ],
            "resolutionStrategy": "or"
          },
          {
            "provider": "oneTrust",
            "consents": [
              {
                "consent": "Marketing"
              }
            ]
          },
          {
            "provider": "ketch",
            "consents": []
          }
        ]
      }
    },
    "result": true
  },
  {
    "testTitle": "With consent management custom provider config and invalid resolutionStrategy value",
    "config": {
      "accessKeyId": "test-access-key-id",
      "accessKey": "test-access-key",
      "roleBasedAuth": false,
      "region": "us-east-1",
      "lambda": "myFunction",
      "consentManagement": {
        "android": [
          {
            "provider": "custom",
            "resolutionStrategy": "nor"
          }
        ]
      }
    },
    "result": false,
    "err": [
      "consentManagement.android.0.resolutionStrategy must be equal to one of the allowed values",
      "consentManagement.android.0 must match \"then\" schema"
    ]
  },
  {
    "testTitle": "With consent management custom provider config and no resolutionStrategy value",
    "config": {
      "accessKeyId": "test-access-key-id",
      "accessKey": "test-access-key",
      "roleBasedAuth": false,
      "region": "us-east-1",
      "lambda": "myFunction",
      "consentManagement": {
        "android": [
          {
            "provider": "custom"
          }
        ]
      }
    },
    "result": false,
    "err": [
      "consentManagement.android.0 must have required property 'resolutionStrategy'",
      "consentManagement.android.0 must match \"then\" schema"
    ]
  },
  {
    "testTitle": "With consent management OneTrust provider config and no resolutionStrategy value",
    "config": {
      "accessKeyId": "test-access-key-id",
      "accessKey": "test-access-key",
      "roleBasedAuth": false,
      "region": "us-east-1",
      "lambda": "myFunction",
      "consentManagement": {
        "android": [
          {
            "provider": "oneTrust"
          }
        ]
      }
    },
    "result": true
  },
  {
    "testTitle": "With consent management custom provider config invalid provider value",
    "config": {
      "accessKeyId": "test-access-key-id",
      "accessKey": "test-access-key",
      "roleBasedAuth": false,
      "region": "us-east-1",
      "lambda": "myFunction",
      "consentManagement": {
        "android": [
          {
            "provider": "dummyProvider"
          }
        ]
      }
    },
    "result": false,
    "err": ["consentManagement.android.0.provider must be equal to one of the allowed values"]
  },
  {
    "config": {
      "accessKeyId": "test-access-key-id",
      "accessKey": "test-access-key",
      "roleBasedAuth": false,
      "region": "us-east-1",
      "lambda": "myFunction",
      "oneTrustCookieCategories": {
        "amp": [
          {
            "oneTrustCookieCategory": "C0001"
          },
          {
            "oneTrustCookieCategory": "C0002"
          }
        ],
        "android": [
          {
            "oneTrustCookieCategory": "C0003"
          },
          {
            "oneTrustCookieCategory": "C0004"
          }
        ],
        "cordova": [
          {
            "oneTrustCookieCategory": ""
          }
        ],
        "cloud": [],
        "flutter": [
          {
            "oneTrustCookieCategory": "env.ENVIRONMENT_VARIABLE"
          }
        ],
        "ios": [
          {
            "oneTrustCookieCategory": "{{ event.properties.prop1 || 'val' }}"
          }
        ],
        "reactnative": [
          {
            "oneTrustCookieCategory": "C0001"
          },
          {
            "oneTrustCookieCategory": "C0002"
          }
        ],
        "unity": [
          {
            "oneTrustCookieCategory": "C0003"
          },
          {
            "oneTrustCookieCategory": "C0004"
          }
        ],
        "warehouse": [
          {
            "oneTrustCookieCategory": ""
          }
        ],
        "web": [],
        "shopify": [
          {
            "oneTrustCookieCategory": "env.ENVIRONMENT_VARIABLE"
          }
        ]
      },
      "ketchConsentPurposes": {
        "amp": [
          {
            "purpose": "P1"
          },
          {
            "purpose": "P2"
          }
        ],
        "android": [
          {
            "purpose": "P3"
          },
          {
            "purpose": "P4"
          }
        ],
        "cordova": [
          {
            "purpose": ""
          }
        ],
        "cloud": [],
        "flutter": [
          {
            "purpose": "env.ENVIRONMENT_VARIABLE"
          }
        ],
        "ios": [
          {
            "purpose": "{{ event.properties.prop1 || 'val' }}"
          }
        ],
        "reactnative": [
          {
            "purpose": "P1"
          },
          {
            "purpose": "P2"
          }
        ],
        "unity": [
          {
            "purpose": "P3"
          },
          {
            "purpose": "P4"
          }
        ],
        "warehouse": [
          {
            "purpose": ""
          }
        ],
        "web": [],
        "shopify": [
          {
            "purpose": "env.ENVIRONMENT_VARIABLE"
          }
        ]
      }
    },
    "result": true
  },
  {
    "config": {
      "accessKeyId": "test-access-key-id",
      "accessKey": "test-access-key",
      "roleBasedAuth": false,
      "region": "us-east-1",
      "lambda": "myFunction",
      "oneTrustCookieCategories": [
        {
          "oneTrustCookieCategory": "C0001"
        },
        {
          "oneTrustCookieCategory": "C0002"
        }
      ],
      "ketchConsentPurposes": [
        {
          "purpose": "P1"
        },
        {
          "purpose": "P2"
        }
      ]
    },
    "result": false,
    "err": ["oneTrustCookieCategories must be object", "ketchConsentPurposes must be object"]
  },
  {
    "config": {
      "accessKeyId": "test-access-key-id",
      "accessKey": "test-access-key",
      "roleBasedAuth": false,
      "region": "us-east-1",
      "lambda": "myFunction",
      "oneTrustCookieCategories": {
        "amp": [
          {
            "oneTrustCookieCategory": "more than 100 characters string - AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
          },
          {
            "oneTrustCookieCategory": "C0004"
          }
        ],
        "android": [
          {
            "oneTrustCookieCategory": {
              "not": "a string"
            }
          },
          {
            "oneTrustCookieCategory": "C0004"
          }
        ],
        "cordova": {
          "not": "an array"
        },
        "cloud": [
          "not an object",
          {
            "oneTrustCookieCategory": "C0004"
          }
        ]
      },
      "ketchConsentPurposes": {
        "amp": [
          {
            "purpose": "more than 100 characters string - AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
          },
          {
            "purpose": "P4"
          }
        ],
        "android": [
          {
            "purpose": {
              "not": "a string"
            }
          },
          {
            "purpose": "P4"
          }
        ],
        "cordova": {
          "not": "an array"
        },
        "cloud": [
          "not an object",
          {
            "purpose": "P4"
          }
        ]
      }
    },
    "result": false,
    "err": [
      "oneTrustCookieCategories.amp.0.oneTrustCookieCategory must match pattern \"(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$\"",
      "oneTrustCookieCategories.android.0.oneTrustCookieCategory must be string",
      "oneTrustCookieCategories.cordova must be array",
      "oneTrustCookieCategories.cloud.0 must be object",
      "ketchConsentPurposes.amp.0.purpose must match pattern \"(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$\"",
      "ketchConsentPurposes.android.0.purpose must be string",
      "ketchConsentPurposes.cordova must be array",
      "ketchConsentPurposes.cloud.0 must be object"
    ]
  }
]
