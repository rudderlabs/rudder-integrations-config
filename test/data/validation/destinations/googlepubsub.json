[
  {
    "config": {
      "projectId": "sampleIdnew1",
      "eventToTopicMap": [
        {
          "from": "page",
          "to": "page_anonymous"
        }
      ],
      "eventToAttributesMap": [
        {
          "from": "identifier",
          "to": "idefKey"
        }
      ],
      "credentials": "{\n  \"type\": \"service_account\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"-----BEGIN PRIVATE KEY----------END PRIVATE KEY-----\\n\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  \"client_x509_cert_url\": \"\"\n}"
    },
    "result": true
  },
  {
    "config": {
      "eventToTopicMap": [
        {
          "from": "page",
          "to": "page_anonymous"
        }
      ],
      "eventToAttributesMap": [
        {
          "from": "identifier",
          "to": "idefKey"
        }
      ],
      "credentials": "{\n  \"type\": \"service_account\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"-----BEGIN PRIVATE KEY----------END PRIVATE KEY-----\\n\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  \"client_x509_cert_url\": \"\"\n}"
    },
    "result": false,
    "err": [" must have required property 'projectId'"]
  },
  {
    "config": {
      "projectId": "sampleIdnew",
      "eventToTopicMap": [
        {
          "from": "page",
          "to": "page_anonymous"
        }
      ],
      "eventToAttributesMap": [
        {
          "from": "identifier",
          "to": "idefKey"
        }
      ]
    },
    "result": false,
    "err": [" must have required property 'credentials'"]
  },
  {
    "testTitle": "With valid multiple consent management providers config",
    "config": {
      "projectId": "sampleIdnew1",
      "credentials": "{\n  \"type\": \"service_account\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"-----BEGIN PRIVATE KEY----------END PRIVATE KEY-----\\n\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  \"client_x509_cert_url\": \"\"\n}",
      "consentManagement": {
        "web": [
          {
            "provider": "custom",
            "consents": [
              {
                "consent": "Marketing"
              }
            ],
            "resolutionStrategy": "or"
          },
          {
            "provider": "oneTrust",
            "consents": [
              {
                "consent": "Marketing"
              }
            ]
          },
          {
            "provider": "ketch",
            "consents": []
          }
        ]
      }
    },
    "result": true
  },
  {
    "testTitle": "With consent management custom provider config and invalid resolutionStrategy value",
    "config": {
      "projectId": "sampleIdnew1",
      "credentials": "{\n  \"type\": \"service_account\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"-----BEGIN PRIVATE KEY----------END PRIVATE KEY-----\\n\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  \"client_x509_cert_url\": \"\"\n}",
      "consentManagement": {
        "android": [
          {
            "provider": "custom",
            "resolutionStrategy": "nor"
          }
        ]
      }
    },
    "result": false,
    "err": [
      "consentManagement.android.0.resolutionStrategy must be equal to one of the allowed values",
      "consentManagement.android.0 must match \"then\" schema"
    ]
  },
  {
    "testTitle": "With consent management custom provider config and no resolutionStrategy value",
    "config": {
      "projectId": "sampleIdnew1",
      "credentials": "{\n  \"type\": \"service_account\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"-----BEGIN PRIVATE KEY----------END PRIVATE KEY-----\\n\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  \"client_x509_cert_url\": \"\"\n}",
      "consentManagement": {
        "android": [
          {
            "provider": "custom"
          }
        ]
      }
    },
    "result": false,
    "err": [
      "consentManagement.android.0 must have required property 'resolutionStrategy'",
      "consentManagement.android.0 must match \"then\" schema"
    ]
  },
  {
    "testTitle": "With consent management OneTrust provider config and no resolutionStrategy value",
    "config": {
      "projectId": "sampleIdnew1",
      "credentials": "{\n  \"type\": \"service_account\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"-----BEGIN PRIVATE KEY----------END PRIVATE KEY-----\\n\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  \"client_x509_cert_url\": \"\"\n}",
      "consentManagement": {
        "android": [
          {
            "provider": "oneTrust"
          }
        ]
      }
    },
    "result": true
  },
  {
    "testTitle": "With consent management custom provider config invalid provider value",
    "config": {
      "projectId": "sampleIdnew1",
      "credentials": "{\n  \"type\": \"service_account\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"-----BEGIN PRIVATE KEY----------END PRIVATE KEY-----\\n\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  \"client_x509_cert_url\": \"\"\n}",
      "consentManagement": {
        "android": [
          {
            "provider": "dummyProvider"
          }
        ]
      }
    },
    "result": false,
    "err": ["consentManagement.android.0.provider must be equal to one of the allowed values"]
  },
  {
    "config": {
      "projectId": "sampleIdnew1",
      "eventToTopicMap": [
        {
          "from": "page",
          "to": "page_anonymous"
        }
      ],
      "eventToAttributesMap": [
        {
          "from": "identifier",
          "to": "idefKey"
        }
      ],
      "credentials": "{\n  \"type\": \"service_account\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"-----BEGIN PRIVATE KEY----------END PRIVATE KEY-----\\n\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  \"client_x509_cert_url\": \"\"\n}",
      "oneTrustCookieCategories": {
        "android": [
          {
            "oneTrustCookieCategory": "C0001"
          },
          {
            "oneTrustCookieCategory": "C0002"
          }
        ],
        "ios": [
          {
            "oneTrustCookieCategory": "C0003"
          },
          {
            "oneTrustCookieCategory": "C0004"
          }
        ],
        "web": [
          {
            "oneTrustCookieCategory": ""
          }
        ],
        "unity": [],
        "amp": [
          {
            "oneTrustCookieCategory": "env.ENVIRONMENT_VARIABLE"
          }
        ],
        "cloud": [
          {
            "oneTrustCookieCategory": "{{ event.properties.prop1 || 'val' }}"
          }
        ],
        "warehouse": [
          {
            "oneTrustCookieCategory": "C0001"
          },
          {
            "oneTrustCookieCategory": "C0002"
          }
        ],
        "reactnative": [
          {
            "oneTrustCookieCategory": "C0003"
          },
          {
            "oneTrustCookieCategory": "C0004"
          }
        ],
        "flutter": [
          {
            "oneTrustCookieCategory": ""
          }
        ],
        "cordova": [],
        "shopify": [
          {
            "oneTrustCookieCategory": "env.ENVIRONMENT_VARIABLE"
          }
        ]
      },
      "ketchConsentPurposes": {
        "android": [
          {
            "purpose": "P1"
          },
          {
            "purpose": "P2"
          }
        ],
        "ios": [
          {
            "purpose": "P3"
          },
          {
            "purpose": "P4"
          }
        ],
        "web": [
          {
            "purpose": ""
          }
        ],
        "unity": [],
        "amp": [
          {
            "purpose": "env.ENVIRONMENT_VARIABLE"
          }
        ],
        "cloud": [
          {
            "purpose": "{{ event.properties.prop1 || 'val' }}"
          }
        ],
        "warehouse": [
          {
            "purpose": "P1"
          },
          {
            "purpose": "P2"
          }
        ],
        "reactnative": [
          {
            "purpose": "P3"
          },
          {
            "purpose": "P4"
          }
        ],
        "flutter": [
          {
            "purpose": ""
          }
        ],
        "cordova": [],
        "shopify": [
          {
            "purpose": "env.ENVIRONMENT_VARIABLE"
          }
        ]
      }
    },
    "result": true
  },
  {
    "config": {
      "projectId": "sampleIdnew1",
      "eventToTopicMap": [
        {
          "from": "page",
          "to": "page_anonymous"
        }
      ],
      "eventToAttributesMap": [
        {
          "from": "identifier",
          "to": "idefKey"
        }
      ],
      "credentials": "{\n  \"type\": \"service_account\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"-----BEGIN PRIVATE KEY----------END PRIVATE KEY-----\\n\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  \"client_x509_cert_url\": \"\"\n}",
      "oneTrustCookieCategories": [
        {
          "oneTrustCookieCategory": "C0001"
        },
        {
          "oneTrustCookieCategory": "C0002"
        }
      ],
      "ketchConsentPurposes": [
        {
          "purpose": "P1"
        },
        {
          "purpose": "P2"
        }
      ]
    },
    "result": false,
    "err": ["oneTrustCookieCategories must be object", "ketchConsentPurposes must be object"]
  },
  {
    "config": {
      "projectId": "sampleIdnew1",
      "eventToTopicMap": [
        {
          "from": "page",
          "to": "page_anonymous"
        }
      ],
      "eventToAttributesMap": [
        {
          "from": "identifier",
          "to": "idefKey"
        }
      ],
      "credentials": "{\n  \"type\": \"service_account\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"-----BEGIN PRIVATE KEY----------END PRIVATE KEY-----\\n\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  \"client_x509_cert_url\": \"\"\n}",
      "oneTrustCookieCategories": {
        "android": [
          {
            "oneTrustCookieCategory": "more than 100 characters string - AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
          },
          {
            "oneTrustCookieCategory": "C0004"
          }
        ],
        "ios": [
          {
            "oneTrustCookieCategory": {
              "not": "a string"
            }
          },
          {
            "oneTrustCookieCategory": "C0004"
          }
        ],
        "web": {
          "not": "an array"
        },
        "unity": [
          "not an object",
          {
            "oneTrustCookieCategory": "C0004"
          }
        ]
      },
      "ketchConsentPurposes": {
        "android": [
          {
            "purpose": "more than 100 characters string - AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
          },
          {
            "purpose": "P4"
          }
        ],
        "ios": [
          {
            "purpose": {
              "not": "a string"
            }
          },
          {
            "purpose": "P4"
          }
        ],
        "web": {
          "not": "an array"
        },
        "unity": [
          "not an object",
          {
            "purpose": "P4"
          }
        ]
      }
    },
    "result": false,
    "err": [
      "oneTrustCookieCategories.android.0.oneTrustCookieCategory must match pattern \"(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$\"",
      "oneTrustCookieCategories.ios.0.oneTrustCookieCategory must be string",
      "oneTrustCookieCategories.web must be array",
      "oneTrustCookieCategories.unity.0 must be object",
      "ketchConsentPurposes.android.0.purpose must match pattern \"(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$\"",
      "ketchConsentPurposes.ios.0.purpose must be string",
      "ketchConsentPurposes.web must be array",
      "ketchConsentPurposes.unity.0 must be object"
    ]
  }
]
