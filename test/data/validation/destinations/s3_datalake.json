[
  {
    "config": {
      "bucketName": "test-bucket",
      "useGlue": true,
      "prefix": "xyzxx",
      "namespace": "eu_new3",
      "accessKeyID": "",
      "accessKey": "",
      "syncFrequency": "30",
      "region": "us-east-1"
    },
    "result": true
  },
  {
    "config": {
      "bucketName": "test-bucket",
      "useGlue": true,
      "prefix": "xyzxx",
      "namespace": "eu_new3",
      "accessKeyID": "test-access-key-id",
      "accessKey": "test-access-key",
      "syncFrequency": "30",
      "region": "us-east-1"
    },
    "result": true
  },
  {
    "config": {
      "bucketName": "test-bucket",
      "useGlue": true,
      "prefix": "xyzxx",
      "namespace": "eu_new3",
      "roleBasedAuth": true,
      "iamRoleARN": "iam-role",
      "syncFrequency": "30",
      "region": "us-east-1"
    },
    "result": true
  },
  {
    "config": {
      "bucketName": "test-bucket",
      "useGlue": true,
      "prefix": "xyzxx",
      "namespace": "eu_new3",
      "roleBasedAuth": true,
      "syncFrequency": "30",
      "region": "us-east-1"
    },
    "result": false,
    "err": [" must have required property 'iamRoleARN'", " must match \"then\" schema"]
  },
  {
    "config": {
      "bucketName": "test-bucket-test-bucket-test-bucket-test-bucket-test-bucket-test-bucket-test-bucket-test-bucket-test-bucket",
      "useGlue": true,
      "prefix": "xyzxx",
      "namespace": "eu_new3",
      "accessKeyID": "",
      "accessKey": "",
      "syncFrequency": "30",
      "region": "us-east-1"
    },
    "result": false,
    "err": [
      "bucketName must match pattern \"(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^((?!^xn--)(?!.*\\.\\..*)(?!^(\\d+(\\.|$)){4}$)[a-z0-9][a-z0-9-.]{1,61}[a-z0-9])$\""
    ]
  },
  {
    "config": {
      "bucketName": "test.bucket",
      "useGlue": true,
      "prefix": "xyzxx",
      "namespace": "eu_new3",
      "accessKeyID": "",
      "accessKey": "",
      "syncFrequency": "30",
      "region": "us-east-1"
    },
    "result": true
  },
  {
    "config": {
      "bucketName": "testBucket",
      "useGlue": true,
      "prefix": "xyzxx",
      "namespace": "eu_new3",
      "accessKeyID": "",
      "accessKey": "",
      "syncFrequency": "30",
      "region": "us-east-1"
    },
    "result": false,
    "err": [
      "bucketName must match pattern \"(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^((?!^xn--)(?!.*\\.\\..*)(?!^(\\d+(\\.|$)){4}$)[a-z0-9][a-z0-9-.]{1,61}[a-z0-9])$\""
    ]
  },
  {
    "config": {
      "bucketName": "ab",
      "useGlue": true,
      "prefix": "xyzxx",
      "namespace": "eu_new3",
      "accessKeyID": "",
      "accessKey": "",
      "syncFrequency": "30",
      "region": "us-east-1"
    },
    "result": false,
    "err": [
      "bucketName must match pattern \"(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^((?!^xn--)(?!.*\\.\\..*)(?!^(\\d+(\\.|$)){4}$)[a-z0-9][a-z0-9-.]{1,61}[a-z0-9])$\""
    ]
  },
  {
    "config": {
      "bucketName": "ab..ab",
      "useGlue": true,
      "prefix": "xyzxx",
      "namespace": "eu_new3",
      "accessKeyID": "",
      "accessKey": "",
      "syncFrequency": "30",
      "region": "us-east-1"
    },
    "result": false,
    "err": [
      "bucketName must match pattern \"(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^((?!^xn--)(?!.*\\.\\..*)(?!^(\\d+(\\.|$)){4}$)[a-z0-9][a-z0-9-.]{1,61}[a-z0-9])$\""
    ]
  },
  {
    "config": {
      "bucketName": "xn--abc",
      "useGlue": true,
      "prefix": "xyzxx",
      "namespace": "eu_new3",
      "accessKeyID": "",
      "accessKey": "",
      "syncFrequency": "30",
      "region": "us-east-1"
    },
    "result": false,
    "err": [
      "bucketName must match pattern \"(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^((?!^xn--)(?!.*\\.\\..*)(?!^(\\d+(\\.|$)){4}$)[a-z0-9][a-z0-9-.]{1,61}[a-z0-9])$\""
    ]
  },
  {
    "testTitle": "With valid multiple consent management providers config",
    "config": {
      "bucketName": "test-bucket",
      "useGlue": true,
      "prefix": "xyzxx",
      "namespace": "eu_new3",
      "accessKeyID": "",
      "accessKey": "",
      "syncFrequency": "30",
      "region": "us-east-1",
      "consentManagement": {
        "web": [
          {
            "provider": "custom",
            "consents": [
              {
                "consent": "Marketing"
              }
            ],
            "resolutionStrategy": "or"
          },
          {
            "provider": "oneTrust",
            "consents": [
              {
                "consent": "Marketing"
              }
            ]
          },
          {
            "provider": "ketch",
            "consents": []
          }
        ]
      }
    },
    "result": true
  },
  {
    "testTitle": "With consent management custom provider config and invalid resolutionStrategy value",
    "config": {
      "bucketName": "test-bucket",
      "useGlue": true,
      "prefix": "xyzxx",
      "namespace": "eu_new3",
      "accessKeyID": "",
      "accessKey": "",
      "syncFrequency": "30",
      "region": "us-east-1",
      "consentManagement": {
        "android": [
          {
            "provider": "custom",
            "resolutionStrategy": "nor"
          }
        ]
      }
    },
    "result": false,
    "err": [
      "consentManagement.android.0.resolutionStrategy must be equal to one of the allowed values",
      "consentManagement.android.0 must match \"then\" schema"
    ]
  },
  {
    "testTitle": "With consent management custom provider config and no resolutionStrategy value",
    "config": {
      "bucketName": "test-bucket",
      "useGlue": true,
      "prefix": "xyzxx",
      "namespace": "eu_new3",
      "accessKeyID": "",
      "accessKey": "",
      "syncFrequency": "30",
      "region": "us-east-1",
      "consentManagement": {
        "android": [
          {
            "provider": "custom"
          }
        ]
      }
    },
    "result": false,
    "err": [
      "consentManagement.android.0 must have required property 'resolutionStrategy'",
      "consentManagement.android.0 must match \"then\" schema"
    ]
  },
  {
    "testTitle": "With consent management OneTrust provider config and no resolutionStrategy value",
    "config": {
      "bucketName": "test-bucket",
      "useGlue": true,
      "prefix": "xyzxx",
      "namespace": "eu_new3",
      "accessKeyID": "",
      "accessKey": "",
      "syncFrequency": "30",
      "region": "us-east-1",
      "consentManagement": {
        "android": [
          {
            "provider": "oneTrust"
          }
        ]
      }
    },
    "result": true
  },
  {
    "testTitle": "With consent management custom provider config invalid provider value",
    "config": {
      "bucketName": "test-bucket",
      "useGlue": true,
      "prefix": "xyzxx",
      "namespace": "eu_new3",
      "accessKeyID": "",
      "accessKey": "",
      "syncFrequency": "30",
      "region": "us-east-1",
      "consentManagement": {
        "android": [
          {
            "provider": "dummyProvider"
          }
        ]
      }
    },
    "result": false,
    "err": ["consentManagement.android.0.provider must be equal to one of the allowed values"]
  }
]
