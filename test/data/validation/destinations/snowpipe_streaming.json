[
  {
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase"
    },
    "result": true
  },
  {
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase"
    },
    "result": true
  },
  {
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase"
    },
    "result": true
  },
  {
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "test-role",
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase"
    },
    "result": true
  },
  {
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase"
    },
    "result": true
  },
  {
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase"
    },
    "result": true
  },
  {
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n"
    },
    "result": true
  },
  {
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": ""
    },
    "result": true
  },
  {
    "config": {
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase"
    },
    "result": false,
    "err": [" must have required property 'account'"]
  },
  {
    "config": {
      "account": "",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase"
    },
    "result": false,
    "err": ["account must match pattern \"(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{1,100})$\""]
  },
  {
    "config": {
      "account": "test-account",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase"
    },
    "result": false,
    "err": [" must have required property 'database'"]
  },
  {
    "config": {
      "account": "test-account",
      "database": "",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase"
    },
    "result": false,
    "err": ["database must match pattern \"(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{1,100})$\""]
  },
  {
    "config": {
      "account": "test-account",
      "database": "test-database",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase"
    },
    "result": false,
    "err": [" must have required property 'warehouse'"]
  },
  {
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase"
    },
    "result": false,
    "err": [
      "warehouse must match pattern \"(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{1,100})$\""
    ]
  },
  {
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase"
    },
    "result": false,
    "err": [" must have required property 'user'"]
  },
  {
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase"
    },
    "result": false,
    "err": ["user must match pattern \"(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{1,100})$\""]
  },
  {
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKeyPassphrase": "test-passphrase"
    },
    "result": false,
    "err": [" must have required property 'privateKey'"]
  },
  {
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "",
      "privateKeyPassphrase": "test-passphrase"
    },
    "result": false,
    "err": [
      "privateKey must match pattern \"(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|-----BEGIN (?:ENCRYPTED )?PRIVATE KEY-----[\\s\\S]+?-----END (?:ENCRYPTED )?PRIVATE KEY-----\""
    ]
  },
  {
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "abc",
      "privateKeyPassphrase": "test-passphrase"
    },
    "result": false
  },
  {
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase"
    },
    "result": false,
    "err": [" must have required property 'namespace'"]
  },
  {
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase"
    },
    "result": false,
    "err": [
      "namespace must match pattern \"(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^((?!pg_|PG_|pG_|Pg_).{1,64})$\""
    ]
  },
  {
    "testTitle": "With valid multiple consent management providers config",
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase",
      "consentManagement": {
        "web": [
          {
            "provider": "custom",
            "consents": [
              {
                "consent": "Marketing"
              }
            ],
            "resolutionStrategy": "or"
          },
          {
            "provider": "oneTrust",
            "consents": [
              {
                "consent": "Marketing"
              }
            ]
          },
          {
            "provider": "ketch",
            "consents": []
          }
        ]
      }
    },
    "result": true
  },
  {
    "testTitle": "With consent management custom provider config and invalid resolutionStrategy value",
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase",
      "consentManagement": {
        "android": [
          {
            "provider": "custom",
            "resolutionStrategy": "nor"
          }
        ]
      }
    },
    "result": false,
    "err": [
      "consentManagement.android.0.resolutionStrategy must be equal to one of the allowed values",
      "consentManagement.android.0 must match \"then\" schema"
    ]
  },
  {
    "testTitle": "With consent management custom provider config and no resolutionStrategy value",
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase",
      "consentManagement": {
        "android": [
          {
            "provider": "custom"
          }
        ]
      }
    },
    "result": false,
    "err": [
      "consentManagement.android.0 must have required property 'resolutionStrategy'",
      "consentManagement.android.0 must match \"then\" schema"
    ]
  },
  {
    "testTitle": "With consent management OneTrust provider config and no resolutionStrategy value",
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase",
      "consentManagement": {
        "android": [
          {
            "provider": "oneTrust"
          }
        ]
      }
    },
    "result": true
  },
  {
    "testTitle": "With consent management custom provider config invalid provider value",
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase",
      "consentManagement": {
        "android": [
          {
            "provider": "dummyProvider"
          }
        ]
      }
    },
    "result": false,
    "err": ["consentManagement.android.0.provider must be equal to one of the allowed values"]
  },
  {
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase",
      "oneTrustCookieCategories": {
        "android": [
          {
            "oneTrustCookieCategory": "C0001"
          },
          {
            "oneTrustCookieCategory": "C0002"
          }
        ],
        "ios": [
          {
            "oneTrustCookieCategory": "C0003"
          },
          {
            "oneTrustCookieCategory": "C0004"
          }
        ],
        "web": [
          {
            "oneTrustCookieCategory": ""
          }
        ],
        "unity": [],
        "amp": [
          {
            "oneTrustCookieCategory": "env.ENVIRONMENT_VARIABLE"
          }
        ],
        "cloud": [
          {
            "oneTrustCookieCategory": "{{ event.properties.prop1 || 'val' }}"
          }
        ],
        "reactnative": [
          {
            "oneTrustCookieCategory": "C0001"
          },
          {
            "oneTrustCookieCategory": "C0002"
          }
        ],
        "cloudSource": [
          {
            "oneTrustCookieCategory": "C0003"
          },
          {
            "oneTrustCookieCategory": "C0004"
          }
        ],
        "flutter": [
          {
            "oneTrustCookieCategory": ""
          }
        ],
        "cordova": [],
        "shopify": [
          {
            "oneTrustCookieCategory": "env.ENVIRONMENT_VARIABLE"
          }
        ]
      },
      "ketchConsentPurposes": {
        "android": [
          {
            "purpose": "P1"
          },
          {
            "purpose": "P2"
          }
        ],
        "ios": [
          {
            "purpose": "P3"
          },
          {
            "purpose": "P4"
          }
        ],
        "web": [
          {
            "purpose": ""
          }
        ],
        "unity": [],
        "amp": [
          {
            "purpose": "env.ENVIRONMENT_VARIABLE"
          }
        ],
        "cloud": [
          {
            "purpose": "{{ event.properties.prop1 || 'val' }}"
          }
        ],
        "reactnative": [
          {
            "purpose": "P1"
          },
          {
            "purpose": "P2"
          }
        ],
        "cloudSource": [
          {
            "purpose": "P3"
          },
          {
            "purpose": "P4"
          }
        ],
        "flutter": [
          {
            "purpose": ""
          }
        ],
        "cordova": [],
        "shopify": [
          {
            "purpose": "env.ENVIRONMENT_VARIABLE"
          }
        ]
      }
    },
    "result": true
  },
  {
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase",
      "oneTrustCookieCategories": [
        {
          "oneTrustCookieCategory": "C0001"
        },
        {
          "oneTrustCookieCategory": "C0002"
        }
      ],
      "ketchConsentPurposes": [
        {
          "purpose": "P1"
        },
        {
          "purpose": "P2"
        }
      ]
    },
    "result": false,
    "err": ["oneTrustCookieCategories must be object", "ketchConsentPurposes must be object"]
  },
  {
    "config": {
      "account": "test-account",
      "database": "test-database",
      "warehouse": "test-warehouse",
      "user": "test-user",
      "role": "test-role",
      "skipTracksTable": false,
      "namespace": "test-namespace",
      "jsonPaths": "testMap.nestedMap",
      "privateKey": "-----BEGIN PRIVATE KEY-----\ntest\ntest\n-----END PRIVATE KEY-----\n",
      "privateKeyPassphrase": "test-passphrase",
      "oneTrustCookieCategories": {
        "android": [
          {
            "oneTrustCookieCategory": "more than 100 characters string - AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
          },
          {
            "oneTrustCookieCategory": "C0004"
          }
        ],
        "ios": [
          {
            "oneTrustCookieCategory": {
              "not": "a string"
            }
          },
          {
            "oneTrustCookieCategory": "C0004"
          }
        ],
        "web": {
          "not": "an array"
        },
        "unity": [
          "not an object",
          {
            "oneTrustCookieCategory": "C0004"
          }
        ]
      },
      "ketchConsentPurposes": {
        "android": [
          {
            "purpose": "more than 100 characters string - AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
          },
          {
            "purpose": "P4"
          }
        ],
        "ios": [
          {
            "purpose": {
              "not": "a string"
            }
          },
          {
            "purpose": "P4"
          }
        ],
        "web": {
          "not": "an array"
        },
        "unity": [
          "not an object",
          {
            "purpose": "P4"
          }
        ]
      }
    },
    "result": false,
    "err": [
      "oneTrustCookieCategories.android.0.oneTrustCookieCategory must match pattern \"(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$\"",
      "oneTrustCookieCategories.ios.0.oneTrustCookieCategory must be string",
      "oneTrustCookieCategories.web must be array",
      "oneTrustCookieCategories.unity.0 must be object",
      "ketchConsentPurposes.android.0.purpose must match pattern \"(^\\{\\{.*\\|\\|(.*)\\}\\}$)|(^env[.].+)|^(.{0,100})$\"",
      "ketchConsentPurposes.ios.0.purpose must be string",
      "ketchConsentPurposes.web must be array",
      "ketchConsentPurposes.unity.0 must be object"
    ]
  }
]
