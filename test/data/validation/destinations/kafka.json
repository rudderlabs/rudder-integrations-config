[
  {
    "config": {
      "hostName": "rudder$.com",
      "port": "443",
      "topic": "test-topic"
    },
    "result": false
  },
  {
    "config": {
      "hostName": "b-2.helloworld.XXXXXX.XXX.kafka.us-east-1.amazonaws.com",
      "port": "443",
      "topic": "test-topic"
    },
    "result": true
  },
  {
    "config": {
      "hostName": "rudder.com",
      "port": "65536",
      "topic": "test-topic"
    },
    "result": false
  },
  {
    "config": {
      "hostName": "rudder.com",
      "port": "65535",
      "topic": "test-topic"
    },
    "result": true
  },
  {
    "config": {
      "hostName": "rudder.com",
      "port": "65535",
      "topic": "$testtopic"
    },
    "result": false
  },
  {
    "config": {
      "hostName": "rudder.com",
      "port": "65535",
      "topic": "%testtopic"
    },
    "result": false
  },
  {
    "config": {
      "hostName": "rudder.com",
      "port": "65535",
      "topic": "test-topic"
    },
    "result": true
  },
  {
    "config": {
      "hostName": "rudder.com",
      "port": "65535",
      "topic": "test.topic"
    },
    "result": true
  },
  {
    "config": {
      "hostName": "rudder.com",
      "port": "443",
      "topic": "test-topic",
      "sslEnabled": true
    },
    "result": true
  },
  {
    "config": {
      "hostName": "rudder.com",
      "port": "443",
      "topic": "test-topic",
      "sslEnabled": true,
      "caCertificate": "random"
    },
    "result": true
  },
  {
    "config": {
      "hostName": "rudder.com",
      "port": "65535",
      "topic": "test.topic",
      "sslEnabled": true,
      "caCertificate": "random",
      "useSSH": true
    },
    "result": false
  },
  {
    "config": {
      "hostName": "rudder.com",
      "port": "65535",
      "topic": "test.topic",
      "sslEnabled": true,
      "caCertificate": "random",
      "useSSH": true,
      "sshHost": "randomhost",
      "sshUser": "random-user"
    },
    "result": false
  },
  {
    "config": {
      "hostName": "rudder.com",
      "port": "65535",
      "topic": "test.topic",
      "sslEnabled": true,
      "caCertificate": "random",
      "useSSH": true,
      "sshHost": "randomhost",
      "sshPort": "1234",
      "sshUser": "random-user",
      "sshPublicKey": "ssh-ed25519 AAAAC3NzaC1lZDI1NTXXXXXXXXBcq2UbCtrArLiFrzmVcl4KYaOKjx+aNV3eTay"
    },
    "result": true
  },
  {
    "config": {
      "hostName": "rudder.com",
      "port": "65535",
      "topic": "test.topic",
      "sslEnabled": true,
      "caCertificate": "random",
      "useSSH": true,
      "sshHost": "randomhost",
      "sshPort": "1234",
      "sshUser": "random-user",
      "useSASL": true
    },
    "result": false
  },
  {
    "config": {
      "hostName": "rudder.com",
      "port": "65535",
      "topic": "test.topic",
      "sslEnabled": true,
      "caCertificate": "random",
      "useSSH": true,
      "sshHost": "randomhost",
      "sshPort": "1234",
      "sshUser": "random-user",
      "useSASL": true,
      "saslType": "random",
      "username": "random-user",
      "password": "Rudder123"
    },
    "result": false
  },
  {
    "config": {
      "hostName": "rudder.com",
      "port": "65535",
      "topic": "test.topic",
      "sslEnabled": true,
      "caCertificate": "random",
      "useSSH": true,
      "sshHost": "randomhost",
      "sshPort": "1234",
      "sshUser": "random-user",
      "sshPublicKey": "ssh-ed25519 AAAAC3NzaC1lZDI1NTXXXXXXXXBcq2UbCtrArLiFrzmVcl4KYaOKjx+aNV3eTay",
      "useSASL": true,
      "saslType": "plain",
      "username": "random-user",
      "password": "Rudder123"
    },
    "result": true
  },
  {
    "config": {
      "hostName": "hello.world",
      "port": "65535",
      "topic": "foo",
      "sslEnabled": true,
      "caCertificate": "asd",
      "useSSH": true,
      "sshHost": "something",
      "sshPort": "65535",
      "sshUser": "linux",
      "sshPublicKey": "ssh-ed25519 AAAAC3NzaC1lZDI1NTXXXXXXXXBcq2UbCtrArLiFrzmVcl4KYaOKjx+aNV3eTay",
      "useSASL": true,
      "saslType": "plain",
      "username": "foo",
      "password": "Rudder123",
      "convertToAvro": true,
      "avroSchemas": {
        "schemaId": "foo",
        "schema": "bar"
      }
    },
    "result": false
  },
  {
    "config": {
      "hostName": "hello.world",
      "port": "65535",
      "topic": "foo",
      "sslEnabled": true,
      "caCertificate": "asd",
      "useSSH": true,
      "sshHost": "something",
      "sshPort": "65535",
      "sshUser": "linux",
      "sshPublicKey": "ssh-ed25519 AAAAC3NzaC1lZDI1NTXXXXXXXXBcq2UbCtrArLiFrzmVcl4KYaOKjx+aNV3eTay",
      "useSASL": true,
      "saslType": "plain",
      "username": "foo",
      "password": "Rudder123",
      "convertToAvro": true,
      "avroSchemas": [
        {
          "schemaId": "foo",
          "schema": "bar"
        }
      ],
      "embedAvroSchemaID": true
    },
    "result": true
  },
  {
    "testTitle": "With valid multiple consent management providers config",
    "config": {
      "hostName": "b-2.helloworld.XXXXXX.XXX.kafka.us-east-1.amazonaws.com",
      "port": "443",
      "topic": "test-topic",
      "consentManagement": {
        "web": [
          {
            "provider": "custom",
            "consents": [
              {
                "consent": "Marketing"
              }
            ],
            "resolutionStrategy": "or"
          },
          {
            "provider": "oneTrust",
            "consents": [
              {
                "consent": "Marketing"
              }
            ]
          },
          {
            "provider": "ketch",
            "consents": []
          }
        ]
      }
    },
    "result": true
  },
  {
    "testTitle": "With consent management custom provider config and invalid resolutionStrategy value",
    "config": {
      "hostName": "b-2.helloworld.XXXXXX.XXX.kafka.us-east-1.amazonaws.com",
      "port": "443",
      "topic": "test-topic",
      "consentManagement": {
        "android": [
          {
            "provider": "custom",
            "resolutionStrategy": "nor"
          }
        ]
      }
    },
    "result": false,
    "err": [
      "consentManagement.android.0.resolutionStrategy must be equal to one of the allowed values",
      "consentManagement.android.0 must match \"then\" schema"
    ]
  },
  {
    "testTitle": "With consent management custom provider config and no resolutionStrategy value",
    "config": {
      "hostName": "b-2.helloworld.XXXXXX.XXX.kafka.us-east-1.amazonaws.com",
      "port": "443",
      "topic": "test-topic",
      "consentManagement": {
        "android": [
          {
            "provider": "custom"
          }
        ]
      }
    },
    "result": false,
    "err": [
      "consentManagement.android.0 must have required property 'resolutionStrategy'",
      "consentManagement.android.0 must match \"then\" schema"
    ]
  },
  {
    "testTitle": "With consent management OneTrust provider config and no resolutionStrategy value",
    "config": {
      "hostName": "b-2.helloworld.XXXXXX.XXX.kafka.us-east-1.amazonaws.com",
      "port": "443",
      "topic": "test-topic",
      "consentManagement": {
        "android": [
          {
            "provider": "oneTrust"
          }
        ]
      }
    },
    "result": true
  },
  {
    "testTitle": "With consent management custom provider config invalid provider value",
    "config": {
      "hostName": "b-2.helloworld.XXXXXX.XXX.kafka.us-east-1.amazonaws.com",
      "port": "443",
      "topic": "test-topic",
      "consentManagement": {
        "android": [
          {
            "provider": "dummyProvider"
          }
        ]
      }
    },
    "result": false,
    "err": ["consentManagement.android.0.provider must be equal to one of the allowed values"]
  }
]
