{
  "config": {
    "transformAt": "processor",
    "transformAtV1": "processor",
    "saveDestinationResponse": true,
    "includeKeys": [],
    "excludeKeys": [],
    "supportedSourceTypes": [
      "android",
      "ios",
      "web",
      "unity",
      "amp",
      "cloud",
      "reactnative",
      "cloudSource",
      "flutter",
      "cordova"
    ],
    "destConfig": {
      "defaultConfig": [
        "host",
        "database",
        "user",
        "password",
        "port",
        "sslMode",
        "namespace",
        "bucketProvider",
        "bucketName",
        "accessKeyID",
        "accessKey",
        "accountName",
        "accountKey",
        "credentials",
        "secretAccessKey",
        "useSSL",
        "containerName",
        "endPoint",
        "syncFrequency",
        "syncStartAt",
        "excludeWindow",
        "useRudderStorage"
      ]
    },
    "secretKeys": [
      "password",
      "accessKeyID",
      "accessKey",
      "accountKey",
      "secretAccessKey",
      "credentials"
    ]
  },
  "configSchema": {
    "type": "object",
    "allOf": [
      {
        "if": {
          "required": [
            "useRudderStorage"
          ],
          "properties": {
            "useRudderStorage": {
              "const": false
            }
          }
        },
        "then": {
          "required": [
            "bucketProvider"
          ]
        }
      },
      {
        "if": {
          "required": [
            "bucketProvider",
            "useRudderStorage"
          ],
          "properties": {
            "bucketProvider": {
              "const": "S3"
            },
            "useRudderStorage": {
              "const": false
            }
          }
        },
        "then": {
          "required": [
            "bucketName",
            "accessKeyID",
            "accessKey"
          ],
          "properties": {
            "accessKey": {
              "type": "string",
              "pattern": "(^env[.].*)|^(.{0,100})$"
            },
            "bucketName": {
              "type": "string",
              "pattern": "(^env[.].*)|^(.{0,100})$"
            },
            "accessKeyID": {
              "type": "string",
              "pattern": "(^env[.].*)|^(.{0,100})$"
            }
          }
        }
      },
      {
        "if": {
          "required": [
            "bucketProvider",
            "useRudderStorage"
          ],
          "properties": {
            "bucketProvider": {
              "const": "GCS"
            },
            "useRudderStorage": {
              "const": false
            }
          }
        },
        "then": {
          "required": [
            "bucketName",
            "credentials"
          ],
          "properties": {
            "bucketName": {
              "type": "string",
              "pattern": "(^env[.].*)|^(.{0,100})$"
            },
            "credentials": {
              "type": "string",
              "pattern": "(^env[.].*)|.*"
            }
          }
        }
      },
      {
        "if": {
          "required": [
            "bucketProvider",
            "useRudderStorage"
          ],
          "properties": {
            "bucketProvider": {
              "const": "AZURE_BLOB"
            },
            "useRudderStorage": {
              "const": false
            }
          }
        },
        "then": {
          "required": [
            "containerName",
            "accountName",
            "accountKey"
          ],
          "properties": {
            "accountKey": {
              "type": "string",
              "pattern": "(^env[.].*)|^(.{0,100})$"
            },
            "accountName": {
              "type": "string",
              "pattern": "(^env[.].*)|^(.{0,100})$"
            },
            "containerName": {
              "type": "string",
              "pattern": "(^env[.].*)|^(.{0,100})$"
            }
          }
        }
      },
      {
        "if": {
          "required": [
            "bucketProvider",
            "useRudderStorage"
          ],
          "properties": {
            "bucketProvider": {
              "const": "MINIO"
            },
            "useRudderStorage": {
              "const": false
            }
          }
        },
        "then": {
          "required": [
            "bucketName",
            "endPoint",
            "accessKeyID",
            "secretAccessKey",
            "useSSL"
          ],
          "properties": {
            "useSSL": {
              "type": "boolean"
            },
            "endPoint": {
              "type": "string",
              "pattern": "(^env[.].*)|^(.{0,100})$"
            },
            "bucketName": {
              "type": "string",
              "pattern": "(^env[.].*)|^(.{0,100})$"
            },
            "accessKeyID": {
              "type": "string",
              "pattern": "(^env[.].*)|^(.{0,100})$"
            },
            "secretAccessKey": {
              "type": "string",
              "pattern": "(^env[.].*)|^(.{0,100})$"
            }
          }
        }
      }
    ],
    "$schema": "http://json-schema.org/draft-07/schema",
    "required": [
      "host",
      "database",
      "user",
      "password",
      "port",
      "sslMode",
      "syncFrequency",
      "useRudderStorage"
    ],
    "properties": {
      "host": {
        "type": "string",
        "pattern": "(^env[.].*)|^(.{0,100})$"
      },
      "port": {
        "type": "string",
        "pattern": "(^env[.].*)|^(.{0,100})$"
      },
      "user": {
        "type": "string",
        "pattern": "(^env[.].*)|^(.{0,100})$"
      },
      "sslMode": {
        "type": "string",
        "pattern": "^(disable|true|false)$"
      },
      "database": {
        "type": "string",
        "pattern": "(^env[.].*)|^(.{0,100})$"
      },
      "password": {
        "type": "string",
        "pattern": "(^env[.].*)|.*"
      },
      "namespace": {
        "type": "string",
        "pattern": "(^env[.].*)|^(?!pg_|PG_|pG_|Pg_).*"
      },
      "syncStartAt": {
        "type": "string"
      },
      "excludeWindow": {
        "type": "object",
        "required": [
          "excludeWindowStartTime",
          "excludeWindowEndTime"
        ],
        "properties": {
          "excludeWindowEndTime": {
            "type": "string"
          },
          "excludeWindowStartTime": {
            "type": "string"
          }
        }
      },
      "syncFrequency": {
        "type": "string",
        "default": "30",
        "pattern": "^(30|60|180|360|720|1440)$"
      },
      "bucketProvider": {
        "type": "string",
        "pattern": "^(S3|GCS|AZURE_BLOB|MINIO)$"
      },
      "useRudderStorage": {
        "type": "boolean",
        "default": false
      }
    },
    "additionalProperties": true
  },
  "responseRules": {},
  "name": "AZURE_SYNAPSE",
  "displayName": "Azure Synapse",
  "category": "warehouse",
  "uiConfig": [
    {
      "title": "1. Connection Credentials",
      "fields": [
        {
          "type": "textInput",
          "label": "Host",
          "value": "host",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid Host",
          "placeholder": "e.g: azure-synapse.mydomain.com",
          "required": true
        },
        {
          "type": "textInput",
          "label": "Database",
          "value": "database",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid Database",
          "placeholder": "e.g: rudderdb",
          "required": true
        },
        {
          "type": "textInput",
          "label": "User",
          "value": "user",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid User",
          "placeholder": "e.g: rudder",
          "required": true
        },
        {
          "type": "textInput",
          "label": "Password",
          "value": "password",
          "placeholder": "e.g: rudder-password",
          "regex": ".*",
          "required": true
        },
        {
          "type": "textInput",
          "label": "Port",
          "value": "port",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid Port",
          "placeholder": "1433",
          "required": true
        },
        {
          "type": "textInput",
          "label": "Namespace",
          "labelNote": "Schema name for the warehouse where the tables are created",
          "value": "namespace",
          "regex": "^(?!pg_|PG_|pG_|Pg_).*",
          "regexErrorMessage": "Invalid Namespace",
          "required": false,
          "placeholder": "e.g: rudder-schema",
          "footerNote": "Default will be the source name"
        },
        {
          "type": "singleSelect",
          "label": "SSL Mode",
          "value": "sslMode",
          "options": [
            {
              "name": "disable",
              "value": "disable"
            },
            {
              "name": "true",
              "value": "true"
            },
            {
              "name": "false",
              "value": "false"
            }
          ],
          "defaultOption": {
            "name": "disable",
            "value": "disable"
          },
          "required": true
        },
        {
          "type": "singleSelect",
          "label": "Sync Frequency",
          "value": "syncFrequency",
          "options": [
            {
              "name": "Every 30 minutes",
              "value": "30"
            },
            {
              "name": "Every 1 hour",
              "value": "60"
            },
            {
              "name": "Every 3 hours",
              "value": "180"
            },
            {
              "name": "Every 6 hours",
              "value": "360"
            },
            {
              "name": "Every 12 hours",
              "value": "720"
            },
            {
              "name": "Every 24 hours",
              "value": "1440"
            }
          ],
          "defaultOption": {
            "name": "Every 30 minutes",
            "value": "30"
          },
          "required": false
        },
        {
          "type": "timePicker",
          "label": "Sync Starting At (Optional)",
          "value": "syncStartAt",
          "options": {
            "omitSeconds": true,
            "minuteStep": 15
          },
          "required": false,
          "footerNote": "Note: Please specify time in UTC"
        },
        {
          "type": "timeRangePicker",
          "label": "Exclude window (Optional)",
          "value": "excludeWindow",
          "startTime": {
            "label": "start time",
            "value": "excludeWindowStartTime"
          },
          "endTime": {
            "label": "end time",
            "value": "excludeWindowEndTime"
          },
          "options": {
            "omitSeconds": true,
            "minuteStep": 1
          },
          "required": false,
          "footerNote": "Note: Please specify time in UTC"
        }
      ]
    },
    {
      "title": "Object Storage Configuration",
      "fields": [
        {
          "type": "checkbox",
          "label": "Use RudderStack managed object storage",
          "value": "useRudderStorage",
          "default": false,
          "footerNote": "Note: Only available for RudderStack managed data planes"
        },
        {
          "type": "singleSelect",
          "label": "Choose your Storage Provider",
          "value": "bucketProvider",
          "options": [
            {
              "name": "S3",
              "value": "S3"
            },
            {
              "name": "GCS",
              "value": "GCS"
            },
            {
              "name": "AZURE_BLOB",
              "value": "AZURE_BLOB"
            },
            {
              "name": "MINIO",
              "value": "MINIO"
            }
          ],
          "defaultOption": {
            "name": "MINIO",
            "value": "MINIO"
          },
          "required": true,
          "preRequisiteField": {
            "name": "useRudderStorage",
            "selectedValue": false
          }
        },
        {
          "type": "textInput",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "S3"
            },
            {
              "name": "useRudderStorage",
              "selectedValue": false
            }
          ],
          "label": "Staging S3 Storage Bucket Name",
          "labelNote": "S3 Bucket to store data before loading into AzureSynapse",
          "value": "bucketName",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid Staging S3 Storage Bucket Name",
          "placeholder": "e.g: s3-event-logs",
          "required": true,
          "footerNote": "Please make sure the bucket exists in your S3"
        },
        {
          "type": "textInput",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "GCS"
            },
            {
              "name": "useRudderStorage",
              "selectedValue": false
            }
          ],
          "label": "Staging GCS Object Storage Bucket Name",
          "labelNote": "GCS Bucket to store data before loading into AzureSynapse",
          "value": "bucketName",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid Staging GCS Object Storage Bucket Name",
          "placeholder": "e.g: gcs-event-logs",
          "required": true,
          "footerNote": "Please make sure the bucket exists in your GCS"
        },
        {
          "type": "textInput",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "AZURE_BLOB"
            },
            {
              "name": "useRudderStorage",
              "selectedValue": false
            }
          ],
          "label": "Staging Azure Blob Storage Container Name",
          "labelNote": "Container to store data before loading into AzureSynapse",
          "value": "containerName",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid Staging Azure Blob Storage Container Name",
          "required": true,
          "placeholder": "e.g: azure-event-logs",
          "footerNote": "Please make sure the container exists in your Azure Blob Storage"
        },
        {
          "type": "textInput",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "MINIO"
            },
            {
              "name": "useRudderStorage",
              "selectedValue": false
            }
          ],
          "label": "Staging MINIO Storage Bucket Name",
          "labelNote": "MINIO Bucket to store data before loading into AzureSynapse",
          "value": "bucketName",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid Staging MINIO Storage Bucket Name",
          "required": true,
          "placeholder": "e.g: minio-event-logs",
          "footerNote": "Please make sure the bucket exists in your MINIO"
        },
        {
          "type": "textInput",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "S3"
            },
            {
              "name": "useRudderStorage",
              "selectedValue": false
            }
          ],
          "label": "AWS Access Key ID",
          "value": "accessKeyID",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid AWS Access Key ID",
          "required": true,
          "placeholder": "e.g: access-key-id"
        },
        {
          "type": "textInput",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "S3"
            },
            {
              "name": "useRudderStorage",
              "selectedValue": false
            }
          ],
          "label": "AWS Secret Access Key",
          "value": "accessKey",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid AWS Secret Access Key",
          "required": true,
          "placeholder": "e.g: secret-access-key"
        },
        {
          "type": "textInput",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "AZURE_BLOB"
            },
            {
              "name": "useRudderStorage",
              "selectedValue": false
            }
          ],
          "label": "Azure Blob Storage Account Name",
          "value": "accountName",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid Azure Blob Storage Account Name",
          "required": true,
          "placeholder": "e.g: account-name"
        },
        {
          "type": "textInput",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "AZURE_BLOB"
            },
            {
              "name": "useRudderStorage",
              "selectedValue": false
            }
          ],
          "label": "Azure Blob Storage Account Key",
          "value": "accountKey",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid Azure Blob Storage Account Key",
          "required": true,
          "placeholder": "e.g: account-key"
        },
        {
          "type": "textareaInput",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "GCS"
            },
            {
              "name": "useRudderStorage",
              "selectedValue": false
            }
          ],
          "label": "Credentials",
          "labelNote": "GCP Service Account credentials JSON for RudderStack to use in loading data into your Google Cloud Storage",
          "value": "credentials",
          "regex": ".*",
          "required": true,
          "footerNote": "Create a service account in your GCP Project for RudderStack with roles of 'storage.objectCreator'"
        },
        {
          "type": "textInput",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "MINIO"
            },
            {
              "name": "useRudderStorage",
              "selectedValue": false
            }
          ],
          "label": "MinIO Endpoint",
          "value": "endPoint",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid MinIO Endpoint",
          "required": true,
          "placeholder": "e.g: play.min.io:9000"
        },
        {
          "type": "textInput",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "MINIO"
            },
            {
              "name": "useRudderStorage",
              "selectedValue": false
            }
          ],
          "label": "MINIO Access Key ID",
          "value": "accessKeyID",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid MinIO Access Key ID",
          "required": true,
          "placeholder": "e.g: access-key-id"
        },
        {
          "type": "textInput",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "MINIO"
            },
            {
              "name": "useRudderStorage",
              "selectedValue": false
            }
          ],
          "label": "MINIO Secret Access Key",
          "value": "secretAccessKey",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid MinIO Secret Access Key",
          "required": true,
          "placeholder": "e.g: secret-access-key"
        },
        {
          "type": "checkbox",
          "preRequisiteField": [
            {
              "name": "bucketProvider",
              "selectedValue": "MINIO"
            },
            {
              "name": "useRudderStorage",
              "selectedValue": false
            }
          ],
          "label": "Use SSL for connection",
          "value": "useSSL",
          "default": true
        }
      ]
    }
  ]
}