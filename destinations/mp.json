{
  "name": "MP",
  "displayName": "Mixpanel",
  "config": {
    "transformAt": "processor",
    "transformAtV1": "processor",
    "saveDestinationResponse": true,
    "includeKeys": [
      "token",
      "groupKeySettings",
      "apiSecret",
      "dataResidency",
      "people",
      "setAllTraitsByDefault",
      "superProperties",
      "peopleProperties",
      "eventIncrements",
      "propIncrements",
      "consolidatedPageCalls",
      "trackCategorizedPages",
      "trackNamedPages",
      "sourceName",
      "crossSubdomainCookie",
      "persistence",
      "secureCookie",
      "blackListedEvents",
      "whiteListedEvents"
    ],
    "excludeKeys": [],
    "supportedSourceTypes": [
      "android",
      "ios",
      "web",
      "unity",
      "amp",
      "cloud",
      "warehouse",
      "reactnative",
      "flutter",
      "cordova"
    ],
    "supportedMessageTypes": [
      "alias",
      "group",
      "identify",
      "page",
      "screen",
      "track"
    ],
    "destConfig": {
      "defaultConfig": [
        "token",
        "groupKeySettings",
        "apiSecret",
        "dataResidency",
        "people",
        "setAllTraitsByDefault",
        "superProperties",
        "peopleProperties",
        "eventIncrements",
        "propIncrements",
        "consolidatedPageCalls",
        "trackCategorizedPages",
        "trackNamedPages",
        "sourceName",
        "crossSubdomainCookie",
        "persistence",
        "secureCookie"
      ],
      "web": [
        "useNativeSDK",
        "blackListedEvents",
        "whiteListedEvents"
      ]
    },
    "secretKeys": [
      "token"
    ]
  },
  "uiConfig": [
    {
      "title": "Connection Settings",
      "fields": [
        {
          "type": "textInput",
          "label": "API Token",
          "value": "token",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid API Token",
          "required": true,
          "placeholder": "c24f56ed817221606de5a5f0befe8b92",
          "secret": true
        },
        {
          "type": "textInput",
          "label": "API Secret",
          "value": "apiSecret",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid API Secret",
          "required": false,
          "placeholder": "f8a911adfbb6546cc43cdfe29e912a90",
          "secret": true
        },
        {
          "type": "singleSelect",
          "label": "Data Residency",
          "value": "dataResidency",
          "options": [
            {
              "name": "US",
              "value": "us"
            },
            {
              "name": "EU",
              "value": "eu"
            }
          ],
          "defaultOption": {
            "name": "US",
            "value": "us"
          },
          "required": false
        }
      ]
    },
    {
      "title": "Device Mode Settings",
      "fields": [
        {
          "type": "checkbox",
          "label": "Use Mixpanel People",
          "value": "people",
          "default": false,
          "footerNote": "This will send all of your identify calls to Mixpanel's People feature."
        },
        {
          "type": "checkbox",
          "label": "Automatically set all Traits as Super Properties and People Properties",
          "value": "setAllTraitsByDefault",
          "default": false,
          "footerNote": "While this is checked, our integration automatically sets all traits on identify calls as super properties and people properties if Mixpanel People is checked as well."
        },
        {
          "type": "dynamicCustomForm",
          "value": "superProperties",
          "customFields": [
            {
              "type": "textInput",
              "label": "Property to send as super Properties",
              "value": "property",
              "regex": "^(.{0,100})$",
              "regexErrorMessage": "Invalid Property Name",
              "required": false,
              "placeholder": "e.g: residence"
            }
          ]
        },
        {
          "type": "dynamicCustomForm",
          "value": "peopleProperties",
          "customFields": [
            {
              "type": "textInput",
              "label": "Traits to set as People Properties",
              "value": "property",
              "regex": "^(.{0,100})$",
              "regexErrorMessage": "Invalid Property Name",
              "required": false,
              "placeholder": "e.g: address"
            }
          ]
        },
        {
          "type": "dynamicCustomForm",
          "value": "eventIncrements",
          "customFields": [
            {
              "type": "textInput",
              "label": "Events to increment in People",
              "value": "property",
              "regex": "^(.{0,100})$",
              "regexErrorMessage": "Invalid Property Name",
              "required": false,
              "placeholder": "e.g: Added-to-cart"
            }
          ]
        },
        {
          "type": "dynamicCustomForm",
          "value": "propIncrements",
          "customFields": [
            {
              "type": "textInput",
              "label": "Properties to increment in People",
              "value": "property",
              "regex": "^(.{0,100})$",
              "regexErrorMessage": "Invalid Property Name",
              "required": false,
              "placeholder": "e.g: Cart-Value"
            }
          ]
        },
        {
          "type": "checkbox",
          "label": "Track All Pages to Mixpanel with a Consolidated Event Name",
          "value": "consolidatedPageCalls",
          "default": true,
          "footerNote": "This will track Loaded a Page events to Mixpanel for all page method calls. We enable this by default as it's how Mixpanel suggests sending these calls."
        },
        {
          "type": "checkbox",
          "label": "Track Categorized Pages to Mixpanel",
          "value": "trackCategorizedPages",
          "default": false,
          "footerNote": "This will track events to Mixpanel for page method calls that have a category associated with them. For example page('Docs', 'Index') would translate to Viewed Docs Index Page."
        },
        {
          "type": "checkbox",
          "label": "Track Named Pages to Mixpanel",
          "value": "trackNamedPages",
          "default": false,
          "footerNote": "This will track events to Mixpanel for page method calls that have a name associated with them. For example page('Signup') would translate to Viewed Signup Page."
        },
        {
          "type": "textInput",
          "label": "Source Name",
          "value": "sourceName",
          "regex": "^(.{0,100})$",
          "regexErrorMessage": "Invalid Source Name",
          "required": false,
          "placeholder": "e.g: Rudder-JS",
          "footerNote": "This value, if it's not blank, will be sent as rudderstack_source_name to Mixpanel for every event/page/screen call."
        },
        {
          "type": "checkbox",
          "label": "Cross Subdomain Cookie",
          "value": "crossSubdomainCookie",
          "default": false,
          "footerNote": "This will allow the Mixpanel cookie to persist between different pages of your application."
        },
        {
          "type": "singleSelect",
          "label": "Persistence Type",
          "value": "persistence",
          "options": [
            {
              "name": "None",
              "value": "none"
            },
            {
              "name": "Cookie",
              "value": "cookie"
            },
            {
              "name": "Local Storage",
              "value": "localStorage"
            }
          ],
          "defaultOption": {
            "name": "None",
            "value": "none"
          },
          "footerNote": "Choose persistence for Mixpanel SDK"
        },
        {
          "type": "checkbox",
          "label": "Secure Cookie",
          "value": "secureCookie",
          "default": false,
          "footerNote": "This will mark the Mixpanel cookie as secure, meaning it will only be transmitted over https"
        }
      ]
    },
    {
      "title": "Group Key Settings",
      "fields": [
        {
          "type": "dynamicCustomForm",
          "value": "groupKeySettings",
          "label": "Group Keys",
          "customFields": [
            {
              "type": "textInput",
              "label": "Group Key",
              "value": "groupKey",
              "regex": "^(.{0,100})$",
              "regexErrorMessage": "Invalid Group Key",
              "required": false,
              "placeholder": "company"
            }
          ]
        }
      ]
    },
    {
      "title": "Native SDK",
      "fields": [
        {
          "type": "checkbox",
          "label": "Use device-mode to send events",
          "value": "useNativeSDK",
          "default": false
        }
      ]
    },
    {
      "title": "Events Filtering",
      "fields": [
        {
          "type": "dynamicCustomForm",
          "value": "blackListedEvents",
          "label": "Black Listed Events",
          "customFields": [
            {
              "type": "textInput",
              "label": "Event Name",
              "value": "eventName",
              "required": false,
              "placeholder": "e.g: track event name 1",
              "footerNote": "Applicable only for web device mode integrations"
            }
          ]
        },
        {
          "type": "dynamicCustomForm",
          "value": "whiteListedEvents",
          "label": "White Listed Events",
          "customFields": [
            {
              "type": "textInput",
              "label": "Event Name",
              "value": "eventName",
              "required": false,
              "placeholder": "e.g: track event name 1",
              "footerNote": "Applicable only for web device mode integrations"
            }
          ]
        }
      ]
    }
  ]
}